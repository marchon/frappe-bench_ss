frappe.templates["listing"] = '<div class="frappe-list"> <div class="list-filters" style="display: none;"> <div class="show_filters"> <div class="set-filters"> <button class="btn btn-default btn-xs show-filters text-muted" style="margin-right: 10px;"> {{ __("Show Filters") }}</button> <button style="margin-left: -5px;" class="btn btn-default btn-xs new-filter text-muted"> <i class="octicon octicon-plus"></i></button> </div> </div> </div> <div style="margin-bottom:9px" class="list-toolbar-wrapper hide"> <div class="list-toolbar btn-group" style="display:inline-block; margin-right: 10px;"> </div> </div> <div style="clear:both"></div> <div class="no-result text-center" style="display: none;"> {%= no_result_message %} </div> <div class="result"> <div class="list-headers"></div> <div class="list-loading text-center"> {%= frappe.messages.get_waiting_message(__("Loading") + "..." ) %} </div> <div class="result-list"></div> </div> <div class="list-paging-area"> <div class="row"> <div class="col-xs-6"> <div class="btn-group btn-group-paging"> <button type="button" class="btn btn-default btn-sm btn-info" data-value="20">20</button> <button type="button" class="btn btn-default btn-sm" data-value="100">100</button> <button type="button" class="btn btn-default btn-sm" data-value="500">500</button> </div> </div> <div class="col-xs-6 text-right"> <button class="btn btn-default btn-more btn-sm">{%= _more %}...</button> </div> </div> </div> </div> ';
frappe.provide('frappe.ui');frappe.ui.Listing=Class.extend({init:function(opts){this.opts=opts||{};this.page_length=20;this.start=0;this.data=[];if(opts){this.make();}},prepare_opts:function(){if(this.opts.new_doctype){if(frappe.boot.user.can_create.indexOf(this.opts.new_doctype)==-1){this.opts.new_doctype=null;}else{this.opts.new_doctype=this.opts.new_doctype;}}
if(!this.opts.no_result_message){this.opts.no_result_message=__('Nothing to show');}
if(!this.opts.page_length){this.opts.page_length=this.list_settings?(this.list_settings.limit||20):20;}
this.opts._more=__("More");},make:function(opts){if(opts){this.opts=opts;}
this.prepare_opts();$.extend(this,this.opts);$(this.parent).html(frappe.render_template("listing",this.opts));this.wrapper=$(this.parent).find('.frappe-list');this.set_events();if(this.page){this.wrapper.find('.list-toolbar-wrapper').toggle(false);}
if(this.show_filters){this.make_filters();}},add_button:function(label,click,icon){if(this.page){return this.page.add_menu_item(label,click,icon)}else{this.wrapper.find('.list-toolbar-wrapper').removeClass("hide");$button=$('<button class="btn btn-default"></button>').appendTo(this.wrapper.find('.list-toolbar')).html((icon?("<i class='"+icon+"'></i> "):"")+label).click(click);return $button}},set_events:function(){var me=this;this.wrapper.find('.btn-more').click(function(){me.run(true);});this.wrapper.find(".btn-group-paging .btn").click(function(){me.page_length=cint($(this).attr("data-value"));me.wrapper.find(".btn-group-paging .btn-info").removeClass("btn-info");$(this).addClass("btn-info");me.run();});if(this.opts.page_length!=20){this.wrapper.find(".btn-group-paging .btn-info").removeClass("btn-info");this.wrapper.find(".btn-group-paging .btn[data-value='"+this.opts.page_length+"']").addClass('btn-info');}
if(this.title){this.wrapper.find('h3').html(this.title).toggle(true);}
this.set_primary_action();if(me.no_toolbar||me.hide_toolbar){me.wrapper.find('.list-toolbar-wrapper').toggle(false);}},set_primary_action:function(){var me=this;if(this.new_doctype){if(this.listview.settings.set_primary_action){this.listview.settings.set_primary_action(this);}else{this.page.set_primary_action(__("New"),function(){me.make_new_doc(me.new_doctype);},"octicon octicon-plus");}}else{this.page.clear_primary_action();}},make_new_doc:function(doctype){var me=this;frappe.model.with_doctype(doctype,function(){if(me.custom_new_doc){me.custom_new_doc(doctype);}else{if(me.filter_list){frappe.route_options={};$.each(me.filter_list.get_filters(),function(i,f){if(f[2]==="="&&!in_list(frappe.model.std_fields_list,f[1])){frappe.route_options[f[1]]=f[3];}});}
frappe.new_doc(doctype,true);}});},make_filters:function(){this.filter_list=new frappe.ui.FilterList({listobj:this,$parent:this.wrapper.find('.list-filters').toggle(true),doctype:this.doctype,filter_fields:this.filter_fields,default_filters:this.default_filters?this.default_filters:this.listview?this.listview.settings.default_filters:[]});if(frappe.model.is_submittable(this.doctype)){this.filter_list.add_filter(this.doctype,"docstatus","!=",2);};},clear:function(){this.data=[];this.wrapper.find('.result-list').empty();this.wrapper.find('.result').toggle(true);this.wrapper.find('.no-result').toggle(false);this.start=0;if(this.onreset)this.onreset();},set_filters_from_route_options:function(){var me=this;this.filter_list.clear_filters();$.each(frappe.route_options,function(key,value){var doctype=null;if(key.indexOf(".")!==-1){doctype=key.split(".")[0];key=key.split(".")[1];}
if(!doctype){doctype=frappe.meta.get_doctype_for_field(me.doctype,key);}
if(doctype){if($.isArray(value)){me.filter_list.add_filter(doctype,key,value[0],value[1]);}else{me.filter_list.add_filter(doctype,key,"=",value);}}});frappe.route_options=null;},run:function(more){var me=this;if(!more){this.start=0;if(this.onreset)this.onreset();}
if(!me.opts.no_loading){me.set_working(true);}
var args=this.get_call_args();this.save_list_settings_locally(args);return frappe.call({method:this.opts.method||'frappe.desk.query_builder.runquery',type:"GET",freeze:(this.opts.freeze!=undefined?this.opts.freeze:true),args:args,callback:function(r){if(!me.opts.no_loading)
me.set_working(false);me.dirty=false;me.render_results(r);},no_spinner:this.opts.no_loading});},save_list_settings_locally:function(args){if(this.opts.save_list_settings&&this.doctype&&!this.docname){list_settings=frappe.model.list_settings[this.doctype];if(!list_settings){return}
var different=false;if(!frappe.utils.arrays_equal(args.filters,list_settings.filters)){list_settings.filters=args.filters||[];different=true;}
if(list_settings.order_by!==args.order_by){list_settings.order_by=args.order_by;different=true;}
if(list_settings.limit!=args.limit_page_length){list_settings.limit=args.limit_page_length||20
different=true;}
if(args.save_list_settings_fields){list_settings.fields=args.fields;};if(different){list_settings.updated_on=moment().toString();}}},set_working:function(flag){this.wrapper.find('.img-load').toggle(flag);},get_call_args:function(){if(!this.method){var query=this.get_query?this.get_query():this.query;query=this.add_limits(query);var args={query_max:this.query_max,as_dict:1}
args.simple_query=query;}else{var args={limit_start:this.start,limit_page_length:this.page_length}}
if(this.args)
$.extend(args,this.args)
if(this.get_args){$.extend(args,this.get_args());}
return args;},render_results:function(r){if(this.start===0)this.clear();this.wrapper.find('.btn-more, .list-loading').toggle(false);r.values=[];if(r.message){r.values=this.get_values_from_response(r.message);}
if(r.values.length){this.data=this.data.concat(r.values);this.render_list(r.values);this.update_paging(r.values);}else{if(this.start===0){this.wrapper.find('.result').toggle(false);var msg=this.get_no_result_message?this.get_no_result_message():(this.no_result_message?this.no_result_message:__("No Result"));this.wrapper.find('.no-result').html(msg).toggle(true);}}
this.wrapper.find('.list-paging-area').toggle((r.values.length||this.start>0)?true:false);if(this.onrun)this.onrun();if(this.callback)this.callback(r);this.wrapper.trigger("render-complete");},get_values_from_response:function(data){if(data.keys&&$.isArray(data.keys)){return frappe.utils.dict(data.keys,data.values);}else{return data;}},render_list:function(values){this.last_page=values;if(this.filter_list){this.filter_values=this.filter_list.get_filters();}
this.render_rows(values);},render_rows:function(values){var m=Math.min(values.length,this.page_length);for(var i=0;i<m;i++){this.render_row(this.add_row(values[i]),values[i],this,i);}},render_image_gallery:function(){var me=this;frappe.require(["assets/frappe/js/frappe/list/imageview.js","assets/frappe/js/lib/gallery/js/blueimp-gallery.js","assets/frappe/js/lib/gallery/css/blueimp-gallery.css","assets/frappe/js/lib/gallery/js/blueimp-gallery-indicator.js","assets/frappe/js/lib/gallery/css/blueimp-gallery-indicator.css"],function(){me.wrapper.find(".blueimp-gallery").remove();var gallery=frappe.render_template("blueimp-gallery",{});$(gallery).appendTo(me.wrapper);me.wrapper.find(".zoom-view").click(function(event){event.preventDefault();opts={doctype:me.doctype,docname:$(this).parent().attr('data-name'),container:me.wrapper};new frappe.views.ImageView(opts);});});},update_paging:function(values){if(values.length>=this.page_length){this.wrapper.find('.btn-more').toggle(true);this.start+=this.page_length;}},add_row:function(row){return $('<div class="list-row">').data("data",(this.meta&&this.meta.image_view)==0?row:null).appendTo(this.wrapper.find('.result-list')).get(0);},refresh:function(){this.run();},add_limits:function(query){query+=' LIMIT '+this.start+','+(this.page_length+1);return query},set_filter:function(fieldname,label,no_run,no_duplicate){var filter=this.filter_list.get_filter(fieldname);if(filter){var v=cstr(filter.field.get_parsed_value());if(v.indexOf(label)!=-1){return false}else if(no_duplicate){filter.set_values(this.doctype,fieldname,"=",label);}else{if(fieldname=='_user_tags'||fieldname=="_liked_by"){this.filter_list.add_filter(this.doctype,fieldname,'like','%'+label+'%');}else{filter.set_values(this.doctype,fieldname,'in',v+', '+label);}}}else{if(['_user_tags','_comments','_assign','_liked_by'].indexOf(fieldname)!==-1){this.filter_list.add_filter(this.doctype,fieldname,'like','%'+label+'%');}else{this.filter_list.add_filter(this.doctype,fieldname,'=',label);}}
if(!no_run)
this.run();},init_list_settings:function(){if(frappe.model.list_settings[this.doctype]){this.list_settings=frappe.model.list_settings[this.doctype];}else{this.list_settings={};}},call_for_selected_items:function(method,args){var me=this;args.names=$.map(this.get_checked_items(),function(d){return d.name;});frappe.call({method:method,args:args,freeze:true,callback:function(r){if(!r.exc){if(me.list_header){me.list_header.find(".list-select-all").prop("checked",false);}
me.refresh();}}});}});;frappe.has_indicator=function(doctype){if(frappe.model.is_submittable(doctype)){return true;}else if((frappe.listview_settings[doctype]||{}).get_indicator||frappe.workflow.get_state_fieldname(doctype)){return true;}else if(frappe.meta.has_field(doctype,'enabled')||frappe.meta.has_field(doctype,'disabled')){return true;}
return false;}
frappe.get_indicator=function(doc,doctype){if(doc.__unsaved){return[__("Not Saved"),"orange"];}
if(!doctype)doctype=doc.doctype;var settings=frappe.listview_settings[doctype]||{};var is_submittable=frappe.model.is_submittable(doctype),workflow_fieldname=frappe.workflow.get_state_fieldname(doctype);if(workflow_fieldname){var value=doc[workflow_fieldname];if(value){var colour="";if(locals["Workflow State"][value]&&locals["Workflow State"][value].style){var colour={"Success":"green","Warning":"orange","Danger":"red","Primary":"blue",}[locals["Workflow State"][value].style];}
if(!colour)colour="darkgrey";return[__(value),colour,workflow_fieldname+',=,'+value];}}
if(is_submittable&&doc.docstatus==0&&!settings.has_indicator_for_draft){return[__("Draft"),"red","docstatus,=,0"];}
if(is_submittable&&doc.docstatus==2){return[__("Cancelled"),"red","docstatus,=,2"];}
if(settings.get_indicator){var indicator=settings.get_indicator(doc);if(indicator)return indicator;}
if(is_submittable&&doc.docstatus==1){return[__("Submitted"),"blue","docstatus,=,1"];}
if(doc.status){return[__(doc.status),frappe.utils.guess_colour(doc.status)];}
if(frappe.meta.has_field(doctype,'enabled')){if(doc.enabled){return[__('Enabled'),'blue','enabled,=,1'];}else{return[__('Disabled'),'grey','enabled,=,0'];}}
if(frappe.meta.has_field(doctype,'disabled')){if(doc.disabled){return[__('Disabled'),'grey','disabled,=,1'];}else{return[__('Enabled'),'blue','disabled,=,0'];}}};frappe.ui.FilterList=Class.extend({init:function(opts){$.extend(this,opts);this.filters=[];this.wrapper=this.$parent;this.stats=[];this.make();this.set_events();},make:function(){var me=this;$(frappe.render_template("filter_dashboard",{})).appendTo(this.wrapper.find('.show_filters'));this.filters_visible=false;this.wrapper.find('.show-filters').click(function(){var wrapper=$(me.wrapper).find('.filter-dashboard-wrapper');if(!me.filters_visible){wrapper.toggle(true);$(this).text(__("Hide Filters"));me.filters_visible=true;}else{wrapper.toggle(false);$(this).text(__("Show Filters"));me.filters_visible=false;}});$.each(frappe.meta.docfield_map[this.doctype],function(i,d){if(d.in_standard_filter&&frappe.perm.has_perm(me.doctype,d.permlevel,"read")){if(d.fieldtype!='Table'){me.stats.push({name:d.fieldname,label:d.label,type:d.fieldtype});}}});me.stats=me.stats.concat([{name:'creation',label:'Created On',type:'Datetime'},{name:'modified',label:'Last Modified On',type:'Datetime'},{name:'owner',label:'Created By',type:'Data'},{name:'modified_by',label:'Last Modified By',type:'Data'},]);if(frappe.model.is_submittable(me.doctype)){me.stats.push({name:'docstatus',label:'Document Status',type:'Data'});}
$.each(me.stats,function(i,v){me.render_dashboard_headers(v);});me.reload_stats()},render_dashboard_headers:function(field){var me=this;var context={field:field.name,label:__(field.label),type:field.type};var sidebar_stat=$(frappe.render_template("filter_dashboard_head",context)).appendTo(this.wrapper.find(".filter-dashboard-items"));},reload_stats:function(){if(this.fresh){return;}
this.fresh=true;setTimeout(function(){me.fresh=false;},1000);var me=this
return frappe.call({type:"GET",method:'frappe.desk.reportview.get_filter_dashboard_data',args:{stats:me.stats,doctype:me.doctype,filters:me.default_filters},callback:function(r){me.wrapper.find(".filter-stat").empty();$.each(me.stats,function(i,v){me.render_filters(v,(r.message||{})[v.name]);});}});},render_filters:function(field,stat){var me=this;var sum=0;if(['Date','Datetime'].indexOf(field.type)!=-1){return}
var active=this.wrapper.find(".filter-sort-active[data-name='"+__(field.label)+"']");if(active.attr('data-sort-by')==='alphabet'){stat=(stat||[]).sort(function(a,b){return a[0].toString().toLowerCase().localeCompare(b[0].toString().toLowerCase());});}else{stat=(stat||[]).sort(function(a,b){return a[1]-b[1]});}
if(active.attr('data-order')==='desc'){stat=stat.reverse();}
var options=[]
var df=frappe.meta.has_field(me.doctype,field.name)
var labels=[]
if(df&&df.fieldtype=='Check'){options=[{value:0,label:'No'},{value:1,label:'Yes'}];}else if(field.name=="docstatus"){labels.length=stat.length;options=[{value:0,label:"Draft"},{value:1,label:"Submitted"},{value:2,label:"Cancelled"}];}
if(options.length>0){for(i in stat){for(o in options){if(stat[i][0]==options[o].value){if(field.name=="docstatus"){labels[i]=options[o].label}else{stat[i][0]=options[o].label}}}}}
var context={field:field.name,stat:stat,sum:sum,label:__(field.label),labels:labels};var dashboard_filter=this.wrapper.find(".filter-stat[data-name='"+__(field.label)+"']")
dashboard_filter.html(frappe.render_template("filter_dashboard_value",context)).on("click",".filter-stat-link",function(){var fieldname=$(this).attr('data-field');var label=$(this).attr('data-label');if((df&&df.fieldtype=='Check')||field.name=="docstatus"){var noduplicate=true}
if(label=="No Data"){me.listobj.set_filter(fieldname,'',false,noduplicate);}else{me.listobj.set_filter(fieldname,label,false,noduplicate);}
return false;})
if(stat.length>5){var autolist=[]
for(var i=0;i<stat.length;i++){autolist.push({label:stat[i][0],value:field.name});}
var search_input=dashboard_filter.parent().find(".search-dashboard");dashboard_filter.parent().find(".search-dropdown").removeClass("hide").on("shown.bs.dropdown",function(event){search_input.focus();search_input.val("")});search_input.autocomplete({source:autolist,select:function(ev,ui){if(ui.item){if(df&&df.fieldtype=='Check'){var noduplicate=true}
if(ui.item.label=="No Data"){me.listobj.set_filter(ui.item.value,'',false,noduplicate);}else{me.listobj.set_filter(ui.item.value,ui.item.label,false,noduplicate);}
search_input.val('');return false;}},focus:function(event,ui){search_input.val(ui.item.label);return false;}})}},set_events:function(){var me=this;this.wrapper.find('.new-filter').bind('click',function(){me.add_filter();});this.wrapper.find('.clear-filter').bind('click',function(){me.clear_filters();$('.date-range-picker').val('')
me.listobj.run();});this.wrapper.on("click",".filter-sort-item",function(){var active=$(this).closest(".filter-dash-item").find(".filter-sort-active");active.attr('data-sort-by',$(this).attr('data-sort-by'));active.attr('data-order',$(this).attr('data-order'));me.reload_stats();});this.wrapper.find(".filter-input-date").each(function(i,v){var name=$(v).data("name");var f=frappe.ui.form.make_control({df:{fieldtype:"DateRange",fieldname:name,},parent:this,only_input:true,applydaterange:function(ev,picker){var filt=me.get_filter(name);if(filt){filt.remove(true)}
me.add_filter(me.doctype,name,'Between',[picker.startDate,picker.endDate]);me.listobj.run();},canceldaterange:function(ev,picker){$(this).val('');var filt=me.get_filter(name);if(filt){filt.remove(true)}}})
f.refresh();})},show_filters:function(){this.wrapper.find('.show_filters').toggle();if(!this.filters.length){this.add_filter(this.doctype,'name');this.filters[0].wrapper.find(".filter_field input").focus();}},clear_filters:function(){$.each(this.filters,function(i,f){f.remove(true);});this.filters=[];},add_filter:function(doctype,fieldname,condition,value,hidden){if(doctype&&fieldname&&!frappe.meta.has_field(doctype,fieldname)&&!in_list(frappe.model.std_fields_list,fieldname)){frappe.msgprint({message:__('Filter {0} missing',[fieldname.bold()]),title:'Invalid Filter',indicator:'red'});return;}
this.wrapper.find('.show_filters').toggle(true);var is_new_filter=arguments.length===0;if(is_new_filter&&this.wrapper.find(".is-new-filter:visible").length){return;}
var filter=this.push_new_filter(doctype,fieldname,condition,value);if(filter&&is_new_filter){filter.wrapper.addClass("is-new-filter");}
if(filter&&hidden){filter.freeze();filter.$btn_group.addClass("hide");}
return filter;},push_new_filter:function(doctype,fieldname,condition,value){if(this.filter_exists(doctype,fieldname,condition,value))return;var filter=new frappe.ui.Filter({flist:this,_doctype:doctype,fieldname:fieldname,condition:condition,value:value});this.filters.push(filter);return filter;},filter_exists:function(doctype,fieldname,condition,value){for(var i in this.filters){if(this.filters[i].field){var f=this.filters[i].get_value();if(f[0]==doctype&&f[1]==fieldname&&f[2]==condition&&f[3]==value)return true;}}
return false;},get_filters:function(){var values=[];$.each(this.filters,function(i,filter){if(filter.field){filter.freeze();values.push(filter.get_value());}});return values;},update_filters:function(){var fl=[];$.each(this.filters,function(i,f){if(f.field)fl.push(f);})
this.filters=fl;},get_filter:function(fieldname){for(var i in this.filters){if(this.filters[i].field&&this.filters[i].field.df.fieldname==fieldname)
return this.filters[i];}}});frappe.ui.Filter=Class.extend({init:function(opts){$.extend(this,opts);this.doctype=this.flist.doctype;this.make();this.make_select();this.set_events();},make:function(){this.wrapper=$(frappe.render_template("edit_filter",{})).appendTo(this.flist.wrapper.find('.filter_area'));},make_select:function(){var me=this;this.fieldselect=new frappe.ui.FieldSelect({parent:this.wrapper.find('.fieldname_select_area'),doctype:this.doctype,filter_fields:this.filter_fields,select:function(doctype,fieldname){me.set_field(doctype,fieldname);}});if(this.fieldname){this.fieldselect.set_value(this._doctype||this.doctype,this.fieldname);}},set_events:function(){var me=this;this.wrapper.find("a.remove-filter").on("click",function(){me.remove();});this.wrapper.find(".set-filter-and-run").on("click",function(){me.wrapper.removeClass("is-new-filter");me.flist.listobj.run();});me.wrapper.find('.condition').change(function(){if(!me.field)return;var condition=$(this).val();if(in_list(["in","like","not in","not like"],condition)){me.set_field(me.field.df.parent,me.field.df.fieldname,'Data',condition);if(!me.field.desc_area){me.field.desc_area=$('<div class="text-muted small">').appendTo(me.field.wrapper);}
me.field.desc_area.html((in_list(["in","not in"],condition)==="in"?__("values separated by commas"):__("use % as wildcard"))+'</div>');}else{me.set_field(me.field.df.parent,me.field.df.fieldname,null,condition);}});if(me.fieldname){this.set_values(me._doctype,me.fieldname,me.condition,me.value);}else{me.set_field(me.doctype,'name');}},remove:function(dont_run){this.wrapper.remove();this.$btn_group&&this.$btn_group.remove();this.field=null;this.flist.update_filters();if(!dont_run){this.flist.listobj.dirty=true;this.flist.listobj.clean_dash=true;this.flist.listobj.refresh();}},set_values:function(doctype,fieldname,condition,value){this.set_field(doctype,fieldname);if(this.field.df.original_type==='Check'){if(value==0)value='No';else if(value==1)value='Yes';}
if(condition)this.wrapper.find('.condition').val(condition).change();if(value!=null)this.field.set_input(value);},set_field:function(doctype,fieldname,fieldtype,condition){var me=this;var cur=me.field?{fieldname:me.field.df.fieldname,fieldtype:me.field.df.fieldtype,parent:me.field.df.parent,}:{};var original_docfield=me.fieldselect.fields_by_name[doctype][fieldname];if(!original_docfield){msgprint(__("Field {0} is not selectable.",[fieldname]));return;}
var df=copy_dict(me.fieldselect.fields_by_name[doctype][fieldname]);df.read_only=0;df.hidden=0;if(!condition)this.set_default_condition(df,fieldtype);this.set_fieldtype(df,fieldtype);if(me.field&&cur.fieldname==fieldname&&df.fieldtype==cur.fieldtype&&df.parent==cur.parent){return;}
me.fieldselect.selected_doctype=doctype;me.fieldselect.selected_fieldname=fieldname;var old_text=null;if(me.field){old_text=me.field.get_parsed_value();}
var field_area=me.wrapper.find('.filter_field').empty().get(0);var f=frappe.ui.form.make_control({df:df,parent:field_area,only_input:true,})
f.refresh();me.field=f;if(old_text&&me.field.df.fieldtype===cur.fieldtype)
me.field.set_input(old_text);$(me.field.wrapper).find(':input').keydown(function(ev){if(ev.which==13){me.flist.listobj.run();}})},set_fieldtype:function(df,fieldtype){if(df.original_type)
df.fieldtype=df.original_type;else
df.original_type=df.fieldtype;df.description='';df.reqd=0;if(fieldtype){df.fieldtype=fieldtype;return;}
if(df.fieldname=="docstatus"){df.fieldtype="Select",df.options=[{value:0,label:__("Draft")},{value:1,label:__("Submitted")},{value:2,label:__("Cancelled")}]}else if(df.fieldtype=='Check'){df.fieldtype='Select';df.options='No\nYes';}else if(['Text','Small Text','Text Editor','Code','Tag','Comments','Dynamic Link','Read Only','Assign'].indexOf(df.fieldtype)!=-1){df.fieldtype='Data';}else if(df.fieldtype=='Link'&&this.wrapper.find('.condition').val()!="="){df.fieldtype='Data';}
if(df.fieldtype==="Data"&&(df.options||"").toLowerCase()==="email"){df.options=null;}
if(this.wrapper.find('.condition').val()=="Between"&&(df.fieldtype=='Date'||df.fieldtype=='Datetime')){df.fieldtype='DateRange'}},set_default_condition:function(df,fieldtype){if(!fieldtype){if(df.fieldtype=='Data'){this.wrapper.find('.condition').val('like');}else if(df.fieldtype=='Date'||df.fieldtype=='Datetime'){this.wrapper.find('.condition').val('Between');}else{this.wrapper.find('.condition').val('=');}}},get_value:function(){return[this.fieldselect.selected_doctype,this.field.df.fieldname,this.get_condition(),this.get_selected_value()];},get_selected_value:function(){var val=this.field.get_parsed_value();if(typeof val==='string'){val=strip(val);}
if(this.field.df.original_type=='Check'){val=(val=='Yes'?1:0);}
if(this.get_condition().indexOf('like','not like')!==-1){if(val){if(val.slice(0,1)!=="%"){val="%"+val;}
if(val.slice(-1)!=="%"){val=val+"%";}}}else if(in_list(["in","not in"],this.get_condition())){val=$.map(val.split(","),function(v){return strip(v);});}if(val==='%'){val="";}
return val;},get_condition:function(){return this.wrapper.find('.condition').val();},freeze:function(){if(this.$btn_group){this.set_filter_button_text();this.wrapper.toggle(false);return;}
var me=this;this.$btn_group=$('<div class="btn-group">\
   <button class="btn btn-default btn-xs toggle-filter"\
    title="'+__("Edit Filter")+'">\
    %(label)s %(condition)s "%(value)s"\
   </button>\
   <button class="btn btn-default btn-xs remove-filter"\
    title="'+__("Remove Filter")+'">\
    <i class="fa fa-remove text-muted"></i>\
   </button></div>').insertAfter(this.flist.wrapper.find(".set-filters .show-filters"));this.set_filter_button_text();this.$btn_group.find(".remove-filter").on("click",function(){me.remove();});this.$btn_group.find(".toggle-filter").on("click",function(){$(this).closest('.show_filters').find('.filter_area').show()
me.wrapper.toggle();})
this.wrapper.toggle(false);},set_filter_button_text:function(){var value=this.get_selected_value();if(this.field.df.fieldname==="docstatus"){value={0:"Draft",1:"Submitted",2:"Cancelled"}[value]||value;}else if(this.field.df.original_type==="Check"){value={0:"No",1:"Yes"}[cint(value)];}else if(in_list(["Date","Datetime"],this.field.df.fieldtype)){value=frappe.datetime.str_to_user(value);}else{value=this.field.get_value();}
this.$btn_group.find(".toggle-filter").html(repl('%(label)s %(condition)s "%(value)s"',{label:__(this.field.df.label),condition:__(this.get_condition()),value:__(value),}));}});frappe.ui.FieldSelect=Class.extend({init:function(opts){var me=this;$.extend(this,opts);this.fields_by_name={};this.options=[];this.$select=$('<input class="form-control">').appendTo(this.parent).on("click",function(){$(this).select();}).autocomplete({source:me.options,minLength:0,autoFocus:true,focus:function(event,ui){event.preventDefault();},select:function(event,ui){me.selected_doctype=ui.item.doctype;me.selected_fieldname=ui.item.fieldname;me.$select.val(ui.item.label);if(me.select)me.select(ui.item.doctype,ui.item.fieldname);return false;}});this.$select.data('ui-autocomplete')._renderItem=function(ul,item){return $(repl('<li class="filter-field-select"><p>%(label)s</p></li>',item)).data("item.autocomplete",item).appendTo(ul);}
if(this.filter_fields){for(var i in this.filter_fields)
this.add_field_option(this.filter_fields[i])}else{this.build_options();}
this.set_value(this.doctype,"name");window.last_filter=this;},get_value:function(){return this.selected_doctype?this.selected_doctype+"."+this.selected_fieldname:null;},val:function(value){if(value===undefined){return this.get_value();}else{this.set_value(value);}},clear:function(){this.selected_doctype=null;this.selected_fieldname=null;this.$select.val("");},set_value:function(doctype,fieldname){var me=this;this.clear();if(!doctype)return;if(doctype.indexOf(".")!==-1){parts=doctype.split(".");doctype=parts[0];fieldname=parts[1];}
$.each(this.options,function(i,v){if(v.doctype===doctype&&v.fieldname===fieldname){me.selected_doctype=doctype;me.selected_fieldname=fieldname;me.$select.val(v.label);return false;}});},build_options:function(){var me=this;me.table_fields=[];var std_filters=$.map(frappe.model.std_fields,function(d){var opts={parent:me.doctype}
if(d.fieldname=="name")opts.options=me.doctype;return $.extend(copy_dict(d),opts);});var doctype_obj=locals['DocType'][me.doctype];if(doctype_obj&&cint(doctype_obj.istable)){std_filters=std_filters.concat([{fieldname:'parent',fieldtype:'Data',label:'Parent',parent:me.doctype,}]);}
if(this.with_blank){this.options.push({label:"",value:"",})}
var main_table_fields=std_filters.concat(frappe.meta.docfield_list[me.doctype]);$.each(frappe.utils.sort(main_table_fields,"label","string"),function(i,df){if(frappe.perm.has_perm(me.doctype,df.permlevel,"read"))
me.add_field_option(df);});$.each(me.table_fields,function(i,table_df){if(table_df.options){var child_table_fields=[].concat(frappe.meta.docfield_list[table_df.options]);$.each(frappe.utils.sort(child_table_fields,"label","string"),function(i,df){if(frappe.perm.has_perm(me.doctype,df.permlevel,"read"))
me.add_field_option(df);});}});},add_field_option:function(df){var me=this;if(me.doctype&&df.parent==me.doctype){var label=__(df.label);var table=me.doctype;if(df.fieldtype=='Table')me.table_fields.push(df);}else{var label=__(df.label)+' ('+__(df.parent)+')';var table=df.parent;}
if(frappe.model.no_value_type.indexOf(df.fieldtype)==-1&&!(me.fields_by_name[df.parent]&&me.fields_by_name[df.parent][df.fieldname])){this.options.push({label:label,value:table+"."+df.fieldname,fieldname:df.fieldname,doctype:df.parent})
if(!me.fields_by_name[df.parent])me.fields_by_name[df.parent]={};me.fields_by_name[df.parent][df.fieldname]=df;}},});frappe.templates["edit_filter"] = '<div class="filter-box"> <div class="list_filter row"> <div class="fieldname_select_area col-sm-4 form-group ui-front"></div> <div class="col-sm-2 form-group"> <select class="condition form-control"> <option value="=">{%= __("Equals") %}</option> <option value="like">{%= __("Like") %}</option> <option value="in">{%= __("In") %}</option> <option value="not in">{%= __("Not In") %}</option> <option value="!=">{%= __("Not Equals") %}</option> <option value="not like">{%= __("Not Like") %}</option> <option value=">">{%= __(">") %}</option> <option value="<">{%= __("<") %}</option> <option value=">=">{%= __(">=") %}</option> <option value="<=">{%= __("<=") %}</option> <option value="Between">{%= __("Between") %}</option> </select> </div> <div class="col-sm-6 col-xs-12"> <div class="filter_field pull-left" style="width: calc(100% - 70px)"></div> <div class="filter-actions pull-left"> <a class="set-filter-and-run btn btn-primary pull-left"><i class=" fa fa-check"></i></a> <a class="small grey remove-filter pull-left"><i class="octicon octicon-trashcan visible-xs"></i> <span class="hidden-xs">{%= __("Remove") %}</span></a> </div> <div class="clearfix"></div> </div> </div> </div> ';
frappe.templates["filter_dashboard"] = '<div class="filter_area"> <div class="filter-dashboard-wrapper"> <div class="list-filter-dashboard"> <div class="filter-dashboard-items"> </div> </div> </div> </div>';
frappe.templates["filter_dashboard_value"] = ' <li class="divider" style="margin-bottom: 10px"></li> {% if(!stat.length) { %} <li class="stat-no-records text-muted small">{%= __("No records.") %}</li> {% } else { for (var i=0, l=stat.length; i < l; i++) { var stat_label = stat[i][0]; var stat_count = stat[i][1]; %} <li class="filter-item-value"> <a class="filter-stat-link badge-hover small" data-label="{%= stat_label %}" data-field="{%= field %}" title="{%= stat_label %} "> <span class="stat">{%= __(labels.length>0? labels[i] : stat_label) %}</span> <span class="badge">{%= stat_count %}</span> </a> </li> {% } } %} ';
frappe.templates["filter_dashboard_head"] = '<div class="filter-dash-item"> <div class="filter-header"> <h6 class="h6 filter-label" data-name="{{ label }}">{{ label }}</h6> {% if (type!=="Date" && type!=="Datetime" && type!=="DateRange") { %} <div class="dropdown search-dropdown hide pull-right"> <i class="dropdown-toggle octicon octicon-search text-muted" data-toggle="dropdown"></i> <div class="dropdown-menu"> <form > <input class="search-dashboard" type="text" autocomplete="off" class="input-with-feedback form-control" /> </form> </div> </div> <div class="dropdown sort-dropdown pull-right"> <i class="pull-right dropdown-toggle filter-sort-active octicon octicon-gear text-muted" data-name="{{ label }}" data-sort-by="number" data-order="desc" data-toggle="dropdown"/> <ul class="dropdown-menu"> <li class="filter-sort-item" data-sort-by="alphabet" data-order="asc"> <a>Alphabetically Ascending</a></li> <li class="filter-sort-item" data-sort-by="alphabet" data-order="desc"> <a>Alphabetically Descending</a></li> <li class="filter-sort-item" data-sort-by="number" data-order="asc"> <a>Numerically Ascending</a></li> <li class="filter-sort-item" data-sort-by="number" data-order="desc"> <a>Numerically Descending</a></li> </ul> </div> {% } %} </div> {% if(type==="Date" || type==="Datetime" || type==="DateRange") { %} <div class="filter-input filter-input-date" data-name="{{ field }}"> </div> {% } else { %} <ul class="list-unstyled sidebar-menu filter-stat" data-name="{{ label }}"> </ul> {% } %} </div>';
frappe.ui.TagEditor=Class.extend({init:function(opts){$.extend(this,opts);var me=this;this.wrapper=$('<div class="tag-line">').appendTo(this.parent)
this.$tags=$('<ul>').prependTo(this.wrapper);this.$tags.tagit({animate:false,allowSpaces:true,placeholderText:__('Add a tag')+"...",onTagAdded:function(ev,tag){if(me.initialized&&!me.refreshing){tag.find('.tagit-label').text(toTitle(tag.find('.tagit-label').text()));var tag=tag.find('.tagit-label').text();return frappe.call({method:'frappe.desk.tags.add_tag',args:me.get_args(tag),callback:function(r){var user_tags=me.user_tags.split(",");user_tags.push(tag)
me.user_tags=user_tags.join(",");me.on_change&&me.on_change(me.user_tags);}});}},onTagRemoved:function(ev,tag){if(!me.refreshing){var tag=tag.find('.tagit-label').text();return frappe.call({method:'frappe.desk.tags.remove_tag',args:me.get_args(tag),callback:function(r){var user_tags=me.user_tags.split(",");user_tags.splice(user_tags.indexOf(tag),1);me.user_tags=user_tags.join(",");me.on_change&&me.on_change(me.user_tags);}});}}});if(!this.user_tags){this.user_tags="";}
this.initialized=true;this.refresh(this.user_tags);this.setup_autocomplete();},setup_autocomplete:function(){var me=this;this.wrapper.find("input").autocomplete({minLength:0,minChars:0,source:function(request,response){frappe.call({method:"frappe.desk.tags.get_tags",args:{doctype:me.frm.doctype,txt:request.term.toLowerCase(),cat_tags:JSON.stringify(me.list_sidebar.get_cat_tags())},callback:function(r){response(r.message);}});},open:function(){$(this).attr('state','open');},close:function(){$(this).attr('state','closed');}}).focus(function(){if($(this).attr('state')!='open'){$(this).autocomplete("search");}});},get_args:function(tag){return{tag:tag,dt:this.frm.doctype,dn:this.frm.docname,}},refresh:function(user_tags){var me=this;if(!me.initialized||me.refreshing)
return;me.refreshing=true;try{me.$tags.tagit("removeAll");if(user_tags){$.each(user_tags.split(','),function(i,v){if(v){me.$tags.tagit("createTag",v);}});}}catch(e){me.refreshing=false;setTimeout(function(){me.refresh();},100);}
me.refreshing=false;}});frappe.ui.is_liked=function(doc){var liked=frappe.ui.get_liked_by(doc);return liked.indexOf(user)===-1?false:true;}
frappe.ui.get_liked_by=function(doc){var liked=doc._liked_by;if(liked){liked=JSON.parse(liked);}
return liked||[];}
frappe.ui.toggle_like=function($btn,doctype,name,callback){var add=$btn.hasClass("not-liked")?"Yes":"No";$btn.css('pointer-events','none');frappe.call({method:"frappe.desk.like.toggle_like",quiet:true,args:{doctype:doctype,name:name,add:add,},callback:function(r){$btn.css('pointer-events','auto');if(!r.exc){var action_buttons=$('.like-action[data-name="'+name.replace(/"/g,'\"')
+'"][data-doctype="'+doctype.replace(/"/g,'\"')+'"]');if(add==="Yes"){action_buttons.removeClass("not-liked text-extra-muted");}else{action_buttons.addClass("not-liked text-extra-muted");}
var doc=locals[doctype]&&locals[doctype][name];if(doc){var liked_by=JSON.parse(doc._liked_by||"[]"),idx=liked_by.indexOf(user);if(add==="Yes"){if(idx===-1)
liked_by.push(user);}else{if(idx!==-1){liked_by=liked_by.slice(0,idx).concat(liked_by.slice(idx+1))}}
doc._liked_by=JSON.stringify(liked_by);}
if(callback){callback();}}}});};frappe.ui.click_toggle_like=function(){var $btn=$(this);var $count=$btn.siblings(".likes-count");var not_liked=$btn.hasClass("not-liked");var doctype=$btn.attr("data-doctype");var name=$btn.attr("data-name");frappe.ui.toggle_like($btn,doctype,name,function(){if(not_liked){$count.text(cint($count.text())+1);}else{$count.text(cint($count.text())-1);}});return false;}
frappe.ui.setup_like_popover=function($parent,selector){if(frappe.dom.is_touchscreen()){return;}
$parent.on("mouseover",selector,function(){var $wrapper=$(this);$wrapper.popover({animation:true,placement:"right",content:function(){var liked_by=JSON.parse($wrapper.attr('data-liked-by')||"[]");if($wrapper.find(".not-liked").length){if(liked_by.indexOf(user)!==-1){liked_by.splice(liked_by.indexOf(user),1);}}else{if(liked_by.indexOf(user)===-1){liked_by.push(user);}}
if(!liked_by.length){return"";}
return frappe.render_template("liked_by",{"liked_by":liked_by});},html:true,container:'body'});$wrapper.popover('show');});$parent.on("mouseout",selector,function(){$(this).popover('destroy');});};frappe.templates["liked_by"] = '<ul class="list-unstyled liked-by-popover"> {% for (var i in liked_by) { var liked_by_user = liked_by[i]; %} <li> {%= frappe.avatar(liked_by_user) %} <span>{%= frappe.user.full_name(liked_by_user) %}</span> </li> {% } %} </ul> ';
frappe.templates["print_template"] = '<!DOCTYPE html> <html lang="en"> <head> <meta charset="utf-8"> <meta http-equiv="X-UA-Compatible" content="IE=edge"> <meta name="viewport" content="width=device-width, initial-scale=1"> <meta name="description" content=""> <meta name="author" content=""> <title>{{ title }}</title> <link href="{{ base_url }}/assets/frappe/css/bootstrap.css" rel="stylesheet"> <link type="text/css" rel="stylesheet" href="{{ base_url }}/assets/frappe/css/font-awesome.css"> <style> {{ print_css }} </style> </head> <body> <div class="print-format-gutter"> <div class="print-format"> {{ content }} </div> </div> </body> </html> ';
frappe.provide('frappe.views.doclistview');frappe.provide('frappe.listviews');cur_list=null;frappe.views.ListFactory=frappe.views.Factory.extend({make:function(route){var me=this,doctype=route[1];frappe.model.with_doctype(doctype,function(){if(locals["DocType"][doctype].issingle){frappe.set_re_route("Form",doctype);}else{if(!frappe.views.doclistview[doctype]){frappe.views.doclistview[doctype]=new frappe.views.DocListView({doctype:doctype,parent:me.make_page(true,"List/"+doctype)});}else{frappe.container.change_to(frappe.views.doclistview[doctype].page_name);}
me.set_cur_list();}});},show:function(){this.set_module_breadcrumb();this._super();this.set_cur_list();cur_list&&cur_list.refresh();},set_module_breadcrumb:function(){if(frappe.route_history.length>1){var prev_route=frappe.route_history[frappe.route_history.length-2];if(prev_route[0]==="modules"){var doctype=frappe.get_route()[1],module=prev_route[1];if(frappe.module_links[module]&&in_list(frappe.module_links[module],doctype)){frappe.breadcrumbs.set_doctype_module(doctype,module);}}}},set_cur_list:function(){var route=frappe.get_route();cur_list=frappe.container.page&&frappe.container.page.doclistview;if(cur_list&&cur_list.doctype!==route[1]){cur_list=null;}}});$(document).on("save",function(event,doc){frappe.views.set_list_as_dirty(doc.doctype);});frappe.views.set_list_as_dirty=function(doctype){var list_page="List/"+doctype;if(frappe.pages[list_page]){if(frappe.pages[list_page].doclistview){if(frappe.pages[list_page].doclistview.dirty){return;}
frappe.pages[list_page].doclistview.dirty=true;}}
var route=frappe.get_route();if(route[0]==="List"&&route[1]===doctype){setTimeout(function(){frappe.pages[list_page].doclistview.refresh();},100);}}
frappe.views.DocListView=frappe.ui.Listing.extend({init:function(opts){$.extend(this,opts);if(!in_list(frappe.boot.user.all_read,this.doctype)){frappe.show_not_permitted(frappe.get_route_str());return;};this.label=__(this.doctype);this.page_name="List/"+this.doctype;this.dirty=true;this.tags_shown=false;this.label=(this.label.toLowerCase().substr(-4)=='list')?__(this.label):(__(this.label)+' '+__('List'));this.make_page();this.setup();this.refresh();},make_page:function(){var me=this;this.parent.doclistview=this;this.page=this.parent.page;this.$page=$(this.parent).css({"min-height":"400px"});$('<div class="frappe-list-area"></div>').appendTo(this.page.main);this.page.main.addClass("listview-main-section");var module=locals.DocType[this.doctype].module;this.page.set_title(__(this.doctype));frappe.breadcrumbs.add(module,this.doctype);},setup:function(){var me=this;this.can_delete=frappe.model.can_delete(this.doctype);this.meta=locals.DocType[this.doctype];this.$page.find('.frappe-list-area').empty(),this.init_list_settings();this.setup_listview();this.init_list(false);this.init_menu();this.show_match_help();this.init_listview();this.setup_filterable();this.init_filters();this.init_sort_selector();},init_headers:function(){this.page.main.find(".list-headers").empty();this.header=this.current_view==='List'?"list_item_main_head":"image_view_item_main_head";var main=frappe.render_template(this.header,{columns:this.listview.columns,right_column:this.listview.settings.right_column,_checkbox:((frappe.model.can_delete(this.doctype)||this.listview.settings.selectable)&&!this.listview.no_delete)});this.list_header=$(frappe.render_template("list_item_row_head",{main:main,list:this.listview})).appendTo(this.page.main.find(".list-headers"));this.init_like();this.init_select_all();},init_listview:function(){if(this.listview.settings.onload){this.listview.settings.onload(this);}},set_sidebar_height:function(){var h_main=this.page.sidebar.height();var h_side=this.$page.find(".layout-side-section").height();if(h_side>h_main)
this.$page.find(".layout-main-section").css({"min-height":h_side});},setup_filterable:function(){var me=this;this.$page.on("click",".filterable",function(e){var filters=$(this).attr("data-filter").split("|");var added=false;$.each(filters,function(i,f){f=f.split(",");if(f[2]==="Today"){f[2]=frappe.datetime.get_today();}else if(f[2]=="User"){f[2]=user;}
var new_filter=me.filter_list.add_filter(me.doctype,f[0],f[1],f.slice(2).join(","));if(new_filter){added=true;}});if(added){me.refresh(true);}});this.$page.find(".result-list").on("click",".list-row-left",function(e){if((e.target.className||"").indexOf("filterable")!==-1||(e.target.className||"").indexOf("octicon-heart")!==-1||e.target.type==="checkbox"){return;}
var link=$(this).parent().find("a.list-id").get(0);window.location.href=link.href;return false;});},init_filters:function(){var me=this;var set_filters=function(filters){$.each(filters,function(i,f){if(f.length===3){f=[me.doctype,f[0],f[1],f[2]]}
me.filter_list.add_filter(f[0],f[1],f[2],f[3]);});}
if(this.list_settings.filters){set_filters(this.list_settings.filters);}else if(this.listview.settings.filters){set_filters(this.listview.settings.filters);}},init_sort_selector:function(){var args=null;var me=this;if(this.listview.sort_selector){args=this.listview.sort_selector;}
if(this.list_settings.order_by){var order_by=this.list_settings.order_by
if(order_by.indexOf('`.`')!==-1){order_by=order_by.split('.')[1];}
parts=order_by.split(' ');if(parts.length===2){var fieldname=strip(parts[0],'`');args={sort_by:fieldname,sort_order:parts[1]}}}
if(frappe.get_route()[2]==='Gantt'){var field_map=frappe.views.calendar[this.doctype].field_map;args={sort_by:field_map.start,sort_order:'asc'}}
this.sort_selector=new frappe.ui.SortSelector({parent:this.wrapper.find('.list-filters'),doctype:this.doctype,args:args,change:function(){me.run();}});},show_match_help:function(){var me=this;var match_rules_list=frappe.perm.get_match_rules(this.doctype);var perm=frappe.perm.get_perm(this.doctype);if(match_rules_list.length){frappe.utils.set_footnote(this,this.$page.find(".layout-main-section"),frappe.render_template("list_permission_footer",{condition_list:match_rules_list}));$(this.footnote_area).css({"margin-top":"0px"});}},setup_listview:function(){this.listview=frappe.views.get_listview(this.doctype,this);this.wrapper=this.$page.find('.frappe-list-area');this.page_length=this.list_settings.limit||20;this.allow_delete=true;},init_list:function(auto_run){var me=this;this.make({method:'frappe.desk.reportview.get',save_list_settings:true,get_args:this.get_args,parent:this.wrapper,freeze:true,start:0,page_length:this.page_length,show_filters:true,show_grid:true,new_doctype:this.doctype,allow_delete:this.allow_delete,no_result_message:this.make_no_result(),custom_new_doc:me.listview.make_new_doc||undefined,});if(this.listview.settings.list_view_doc){this.listview.settings.list_view_doc(this);}
else{$(this.wrapper).on("click",'button[list_view_doc="'+me.doctype+'"]',function(){(me.listview.make_new_doc||me.make_new_doc).apply(me,[me.doctype]);});}
if((auto_run!==false)&&(auto_run!==0))
this.refresh();},refresh:function(dirty){if(dirty!==undefined)this.dirty=dirty;this.refresh_sidebar();if(this.current_view!=this.list_sidebar.current_view){this.current_view=this.list_sidebar.current_view;this.init_headers();this.dirty=true;}
if(this.listview.settings.refresh){this.listview.settings.refresh(this);}
this.set_filters_before_run();if(this.dirty){this.run();if(this.clean_dash!=true){this.filter_list.reload_stats();}}else{if(new Date()-(this.last_updated_on||0)>30000){this.run();}}},set_filters_before_run:function(){var me=this;if(frappe.route_options){this.set_filters_from_route_options();this.dirty=true;}else if(this.list_settings&&this.list_settings.filters&&this.list_settings.updated_on!=this.list_settings_updated_on){this.filter_list.clear_filters();this.list_settings.filters.forEach(function(f){me.filter_list.add_filter(f[0],f[1],f[2],f[3]);});this.dirty=true;}},run:function(more){var me=this;if(this.fresh&&!more){return;}
if(this.listview.settings.before_run){this.listview.settings.before_run(this);}
if(!this.listview.settings.use_route){var route=frappe.get_route();if(route[2]&&!in_list(['Image','Gantt'],route[2])){$.each(frappe.utils.get_args_dict_from_url(route[2]),function(key,val){me.set_filter(key,val,true);});}}
this.list_header.find(".list-liked-by-me").toggleClass("text-extra-muted not-liked",!this.is_star_filtered());this.last_updated_on=new Date();this.dirty=false;this.clean_dash=false;this.fresh=true;setTimeout(function(){me.fresh=false;},1000);this._super(more);if(this.listview.settings.post_render){this.listview.settings.post_render(this);}
this.list_settings_updated_on=this.list_settings.updated_on;},make_no_result:function(){var new_button=frappe.boot.user.can_create.indexOf(this.doctype)!=-1?('<p><button class="btn btn-primary btn-sm" \
    list_view_doc="'+this.doctype+'">'+
__('Make a new {0}',[__(this.doctype)])+'</button></p>'):'';var no_result_message='<div class="msg-box no-border">\
   <p>'+__("No {0} found",[__(this.doctype)])+'</p>'+new_button+'</div>';return no_result_message;},render_rows:function(values){this['render_rows_'+this.current_view](values);},render_rows_Image:function(values){var cols=values.slice();while(cols.length){row=this.add_row(cols[0]);$("<div class='row image-view-marker'></div>").appendTo(row);$(row).addClass('no-hover');this.render_image_view_row(row,cols.splice(0,4));}
this.render_image_gallery();},render_rows_List:function(values){var m=Math.min(values.length,this.page_length);for(var i=0;i<m;i++){this.render_row(this.add_row(values[i]),values[i],this,i);}},render_rows_Gantt:function(values){var gantt_area=$('<svg height="400" width="6000"></svg>').appendTo(this.wrapper.find('.result-list').css("overflow","scroll"));var id=frappe.dom.set_unique_id(gantt_area);var me=this;var field_map=frappe.views.calendar[this.doctype].field_map;var tasks=values.map(function(item){return{start:item[field_map.start],end:item[field_map.end],name:item[field_map.title],id:item[field_map.id],doctype:me.doctype,progress:item.progress,dependent:item.depends_on_tasks||""};});frappe.require(["assets/frappe/js/lib/snap.svg-min.js","assets/frappe/css/gantt.css"],function(){me.gantt=new Gantt({parent_selector:'#'+id,tasks:tasks,date_format:"YYYY-MM-DD",bar:{height:20},events:{bar_on_click:function(task){frappe.set_route('Form',task.doctype,task.id);},bar_on_date_change:function(task,start,end){update_field(task.id,field_map.start,start.format("YYYY-MM-DD"),function(){update_field(task.id,field_map.end,end.format("YYYY-MM-DD"),function(){show_alert({message:__("Saved"),indicator:'green'},1);});});},bar_on_progress_change:function(task,progress){update_field(task.id,'progress',progress,function(){show_alert({message:__("Saved"),indicator:'green'},1);});},on_viewmode_change:function(mode){me.list_settings.view_mode=mode;}}});me.gantt.render();var view_modes=me.gantt.get_view_modes()||[];var dropdown="<div class='dropdown pull-right'>"+"<a class='text-muted dropdown-toggle' data-toggle='dropdown'>"+"<span class='dropdown-text'>"+__('Day')+"</span><i class='caret'></i></a>"+"<ul class='dropdown-menu'></ul>"+"</div>";var dropdown_list="";view_modes.forEach(function(view_mode){dropdown_list+="<li>"+"<a class='option' data-value='"+view_mode+"'>"+
__(view_mode)+"</a></li>";})
var $dropdown=$(dropdown)
$dropdown.find(".dropdown-menu").append(dropdown_list);me.$page.find(".list-row-right").css("margin-top",0).html($dropdown)
$dropdown.on("click",".option",function(){var mode=$(this).data('value');me.gantt.set_view_mode(mode)
$dropdown.find(".dropdown-text").text(mode);})});function update_field(id,fieldname,value,callback){frappe.call({method:"frappe.client.set_value",freeze:false,args:{doctype:me.doctype,name:id,fieldname:fieldname,value:value},callback:function(r){callback();}});}},render_row:function(row,data){data.doctype=this.doctype;this.listview.render(row,data,this);},render_image_view_row:function(row,data){for(var i=0;i<data.length;i++){data[i].doctype=this.doctype;this.listview.render(row,data[i],this)}},get_args:function(){var args={doctype:this.doctype,fields:this.listview.fields,filters:this.filter_list.get_filters(),order_by:this.listview.order_by||undefined,group_by:this.listview.group_by||undefined,with_comment_count:true}
$.each((this.listview.default_filters||this.listview.settings.default_filters||[]),function(i,f){args.filters.push(f);});args.order_by='`tab'+this.doctype+'`.`'+this.sort_selector.sort_by+'` '+this.sort_selector.sort_order;return args;},assigned_to_me:function(){this.filter_list.add_filter(this.doctype,"_assign",'like','%'+user+'%');this.run();},liked_by_me:function(){this.filter_list.add_filter(this.doctype,"_liked_by",'like','%'+user+'%');this.run();},remove_liked_by_me:function(){this.filter_list.get_filter("_liked_by").remove();},is_star_filtered:function(){return this.filter_list.filter_exists(this.doctype,"_liked_by",'like','%'+user+'%');},init_menu:function(){var me=this;this.$page.on("click",".list-tag-preview",function(){me.toggle_tags();});this.page.set_secondary_action(__("Refresh"),function(){me.dirty=true;me.refresh();},"octicon octicon-sync");this.page.btn_secondary.addClass("hidden-xs");this.page.add_menu_item(__("Refresh"),function(){me.dirty=true;me.refresh();},"octicon octicon-sync").addClass("visible-xs");if(frappe.model.can_import(this.doctype)){this.page.add_menu_item(__("Import"),function(){frappe.set_route("data-import-tool",{doctype:me.doctype});},true);}
if(frappe.model.can_set_user_permissions(this.doctype)){this.page.add_menu_item(__("User Permissions Manager"),function(){frappe.route_options={doctype:me.doctype};frappe.set_route("user-permissions");},true);}
if(in_list(user_roles,"System Manager")){this.page.add_menu_item(__("Role Permissions Manager"),function(){frappe.route_options={doctype:me.doctype};frappe.set_route("permission-manager");},true);this.page.add_menu_item(__("Customize"),function(){frappe.set_route("Form","Customize Form",{doc_type:me.doctype})},true);}
this.make_bulk_assignment();this.make_bulk_printing();this.page.add_menu_item(__("Add to Desktop"),function(){frappe.add_to_desktop(me.doctype,me.doctype);},true);if(in_list(user_roles,"System Manager")&&frappe.boot.developer_mode===1){this.page.add_menu_item(__("Edit DocType"),function(){frappe.set_route('Form','DocType',me.doctype);},true);}},make_bulk_assignment:function(){var me=this;me.page.add_menu_item(__("Assign To"),function(){docname=[];$.each(me.get_checked_items(),function(i,doc){docname.push(doc.name);})
if(docname.length>=1){me.dialog=new frappe.ui.AssignToDialog({obj:me,method:'frappe.desk.form.assign_to.add_multiple',doctype:me.doctype,docname:docname,bulk_assign:true,re_assign:true,callback:function(){me.dirty=true;me.refresh();}});me.dialog.clear();me.dialog.show();}
else{frappe.msgprint(__("Select records for assignment"))}},true)},make_bulk_printing:function(){var me=this;var print_settings=frappe.model.get_doc(":Print Settings","Print Settings")
var allow_print_for_draft=cint(print_settings.allow_print_for_draft)
var is_submittable=frappe.model.is_submittable(me.doctype)
var allow_print_for_cancelled=cint(print_settings.allow_print_for_cancelled)
me.page.add_menu_item(__("Print"),function(){var no_print=false
docname=[];$.each(me.get_checked_items(),function(i,doc){if(!is_submittable||doc.docstatus==1||(allow_print_for_cancelled&&doc.docstatus==2)||(allow_print_for_draft&&doc.docstatus==0)||in_list(user_roles,"Administrator"))
docname.push(doc.name);else
no_print=true})
if(no_print==true){frappe.msgprint("You selected Draft or Cancelled documents")}
if(docname.length>=1){var dialog=new frappe.ui.Dialog({title:"Print Documents",fields:[{"fieldtype":"Check","label":__("With Letterhead"),"fieldname":"with_letterhead"},{"fieldtype":"Select","label":__("Print Format"),"fieldname":"print_sel"},]});dialog.set_primary_action(__('Print'),function(){args=dialog.get_values();if(!args)return;var default_print_format=locals.DocType[me.doctype].default_print_format;with_letterhead=args.with_letterhead?1:0;print_format=args.print_sel?args.print_sel:default_print_format;var json_string=JSON.stringify(docname);var w=window.open("/api/method/frappe.utils.print_format.download_multi_pdf?"
+"doctype="+encodeURIComponent(me.doctype)
+"&name="+encodeURIComponent(json_string)
+"&format="+encodeURIComponent(print_format)
+"&no_letterhead="+(with_letterhead?"0":"1"));if(!w){msgprint(__("Please enable pop-ups"));return;}})
print_formats=frappe.meta.get_print_formats(me.doctype);dialog.fields_dict.print_sel.$input.empty().add_options(print_formats);dialog.show();}
else{frappe.msgprint(__("Select records for assignment"))}},true);},init_like:function(){var me=this;this.$page.find(".result-list").on("click",".like-action",frappe.ui.click_toggle_like);this.list_header.find(".list-liked-by-me").on("click",function(){if(me.is_star_filtered()){me.remove_liked_by_me();}else{me.liked_by_me();}});if(!frappe.dom.is_touchscreen()){frappe.ui.setup_like_popover(this.$page.find(".result-list"),".liked-by");}},init_select_all:function(){var me=this;if(this.can_delete||this.listview.settings.selectable){this.list_header.find(".list-select-all").on("click",function(){me.$page.find('.list-delete').prop("checked",$(this).prop("checked"));me.toggle_delete();});this.$page.on("click",".list-delete",function(event){me.toggle_delete();var $this=$(this);if(event.shiftKey&&$this.prop("checked")){var $end_row=$this.parents(".list-row");var $start_row=$end_row.prevAll(".list-row").find(".list-delete:checked").last().parents(".list-row");if($start_row){$start_row.nextUntil($end_row).find(".list-delete").prop("checked",true);}}});this.wrapper.on("render-complete",function(){me.toggle_delete();});}},toggle_delete:function(){var me=this;var no_of_checked_items=this.$page.find(".list-delete:checked").length;if(no_of_checked_items){this.page.set_primary_action(__("Delete"),function(){me.delete_items()},"octicon octicon-trashcan");this.page.btn_primary.addClass("btn-danger");this.page.checked_items_status.text(no_of_checked_items==1?__("1 item selected"):__("{0} items selected",[no_of_checked_items]))
this.page.checked_items_status.removeClass("hide");}else{this.page.btn_primary.removeClass("btn-danger");this.set_primary_action();this.page.checked_items_status.addClass("hide");}},toggle_tags:function(){if(this.tags_shown){$(".tag-row").addClass("hide");this.tags_shown=false;}else{$(".tag-row").removeClass("hide");this.tags_shown=true;}},get_checked_items:function(){var me=this;return $.map(this.$page.find('.list-delete:checked'),function(e){if(me.current_view==='List'){return $(e).parents(".list-row:first").data('data');}
else{return $(e).parents(".image-view:first").data('data');}});},delete_items:function(){var me=this;var dl=this.get_checked_items();if(!dl.length)
return;frappe.confirm(__('Delete permanently?'),function(){me.set_working(true);return frappe.call({method:'frappe.desk.reportview.delete_items',freeze:true,args:{items:$.map(dl,function(d,i){return d.name}),doctype:me.doctype},callback:function(){me.$page.find('.list-select-all').prop("checked",false);frappe.utils.play_sound("delete");me.set_working(false);me.dirty=true;me.refresh();}})});},refresh_sidebar:function(){var me=this;me.list_sidebar=new frappe.views.ListSidebar({doctype:me.doctype,stats:me.listview.stats,parent:me.$page.find('.layout-side-section'),set_filter:function(fieldname,label,norun,noduplicates){me.set_filter(fieldname,label,norun,noduplicates);},default_filters:me.listview.settings.default_filters,page:me.page,doclistview:me})}});;frappe.provide('frappe.views');frappe.views.ListSidebar=Class.extend({init:function(opts){$.extend(this,opts);this.make();this.get_stats();this.cat_tags=[];},make:function(){var sidebar_content=frappe.render_template("list_sidebar",{doctype:this.doclistview.doctype});this.sidebar=$('<div class="list-sidebar overlay-sidebar hidden-xs hidden-sm"></div>').html(sidebar_content).appendTo(this.page.sidebar.empty());this.setup_reports();this.setup_assigned_to_me();this.setup_views();},setup_views:function(){var show_list_link=false;if(frappe.views.calendar[this.doctype]){this.sidebar.find(".calendar-link").removeClass("hide");this.sidebar.find('.list-link[data-view="Gantt"]').removeClass('hide');show_list_link=true;}
if(frappe.treeview_settings[this.doctype]){this.sidebar.find(".tree-link").removeClass("hide");}
this.current_view='List';var route=frappe.get_route();if(route.length>2&&(route[2]==='Gantt'||route[2]==='Image')){this.current_view=route[2];}
this.sidebar.find('.list-link[data-view="'+this.current_view+'"] a').attr('disabled','disabled').addClass('disabled');if(this.doclistview.meta.image_field){this.sidebar.find('.list-link[data-view="Image"]').removeClass('hide');show_list_link=true;}
if(show_list_link){this.sidebar.find('.list-link[data-view="List"]').removeClass('hide');}},setup_reports:function(){var me=this;var added=[];var dropdown=this.page.sidebar.find('.reports-dropdown');var divider=false;var add_reports=function(reports){$.each(reports,function(name,r){if(!r.ref_doctype||r.ref_doctype==me.doctype){var report_type=r.report_type==='Report Builder'?'Report/'+r.ref_doctype:'query-report';var route=r.route||report_type+'/'+r.name;if(added.indexOf(route)===-1){added.push(route);if(!divider){$('<li role="separator" class="divider"></li>').appendTo(dropdown);divider=true;}
$('<li><a href="#'+route+'">'
+__(r.name)+'</a></li>').appendTo(dropdown);}}});}
if(this.doclistview.listview.settings.reports){add_reports(this.doclistview.listview.settings.reports)}
add_reports(frappe.boot.user.all_reports||[]);},setup_assigned_to_me:function(){var me=this;this.page.sidebar.find(".assigned-to-me a").on("click",function(){me.doclistview.assigned_to_me();});},get_cat_tags:function(){return this.cat_tags;},get_stats:function(){var me=this
frappe.call({method:'frappe.desk.reportview.get_sidebar_stats',args:{stats:me.stats,doctype:me.doctype,filters:me.default_filters},callback:function(r){me.defined_category=r.message;if(r.message.defined_cat){me.defined_category=r.message.defined_cat
me.cats={};for(i in me.defined_category){if(me.cats[me.defined_category[i].category]===undefined){me.cats[me.defined_category[i].category]=[me.defined_category[i].tag];}else{me.cats[me.defined_category[i].category].push(me.defined_category[i].tag);}
me.cat_tags[i]=me.defined_category[i].tag}
me.tempstats=r.message.stats
var len=me.cats.length;$.each(me.cats,function(i,v){me.render_stat(i,(me.tempstats||{})["_user_tags"],v);});me.render_stat("_user_tags",(me.tempstats||{})["_user_tags"]);}
else
{me.render_stat("_user_tags",(r.message.stats||{})["_user_tags"]);}
me.doclistview.set_sidebar_height();}});},render_stat:function(field,stat,tags){var me=this;var sum=0;var stats=[]
var label=frappe.meta.docfield_map[this.doctype][field]?frappe.meta.docfield_map[this.doctype][field].label:field;var show_tags='<a class="list-tag-preview hidden-xs" title="'+__("Show tags")
+'"><i class="octicon octicon-pencil"></i></a>';stat=(stat||[]).sort(function(a,b){return b[1]-a[1]});$.each(stat,function(i,v){sum=sum+v[1];})
if(tags)
{for(var t in tags){var nfound=-1;for(var i in stat){if(tags[t]===stat[i][0]){stats.push(stat[i]);nfound=i;break}}
if(nfound<0)
{stats.push([tags[t],0])}
else
{me.tempstats["_user_tags"].splice(nfound,1);}}
field="_user_tags"}
else
{stats=stat}
var context={field:field,stat:stats,sum:sum,label:field==='_user_tags'?tags?__(label)+show_tags:(__("UnCategorised Tags")+show_tags):__(label),};var sidebar_stat=$(frappe.render_template("list_sidebar_stat",context)).on("click",".stat-link",function(){var fieldname=$(this).attr('data-field');var label=$(this).attr('data-label');if(label=="No Tags"){me.doclistview.filter_list.add_filter(me.doclistview.doctype,fieldname,'not like','%,%')
me.doclistview.run();}else{me.set_filter(fieldname,label);}}).insertBefore(this.sidebar.find(".close-sidebar-button"));},set_fieldtype:function(df,fieldtype){if(df.fieldname=="docstatus"){df.fieldtype="Select",df.options=[{value:0,label:"Draft"},{value:1,label:"Submitted"},{value:2,label:"Cancelled"},]}else if(df.fieldtype=='Check'){df.fieldtype='Select';df.options=[{value:0,label:'No'},{value:1,label:'Yes'}]}else if(['Text','Small Text','Text Editor','Code','Tag','Comments','Dynamic Link','Read Only','Assign'].indexOf(df.fieldtype)!=-1){df.fieldtype='Data';}else if(df.fieldtype=='Link'&&this.$w.find('.condition').val()!="="){df.fieldtype='Data';}
if(df.fieldtype==="Data"&&(df.options||"").toLowerCase()==="email"){df.options=null;}},reload_stats:function(){this.sidebar.find(".sidebar-stat").remove();this.get_stats();},});;frappe.templates["list_sidebar"] = '<ul class="list-unstyled sidebar-menu user-actions hide"> <li class="divider"></li> </ul> <ul class="list-unstyled sidebar-menu standard-actions"> <li class="divider"></li> <li> <div class="btn-group"> <a class="dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> {{ __("Reports") }} <span class="caret"></span> </a> <ul class="dropdown-menu reports-dropdown" style="max-height: 300px; overflow-y: auto;"> <li><a href="#Report/{{ doctype }}">{{ __("Report Builder") }}</a></li> </ul> </div> </li> <li class="divider"></li> <li class="hide list-link" data-view="List"> <a href="#List/{%= doctype %}">{%= __("List") %}</a></li> <li class="hide list-link" data-view="Image"> <a href="#List/{%= doctype %}/Image">{%= __("Images") %}</a></li> <li class="hide list-link" data-view="Gantt"> <a href="#List/{%= doctype %}/Gantt">{%= __("Gantt") %}</a></li> <li class="hide tree-link"><a href="#Tree/{%= doctype %}">{%= __("Tree") %}</a></li> <li class="hide calendar-link"><a href="#Calendar/{%= doctype %}">{%= __("Calendar") %}</a></li> <li class="assigned-to-me"> <a>{%= __("Assigned To Me") %}</a> </li> {% if(frappe.help.has_help(doctype)) { %} <li><a class="help-link" data-doctype="{{ doctype }}">{{ __("Help") }}</a></li> {% } %} </ul> <ul class="list-unstyled close-sidebar-button visible-xs visible-sm"> <li class="divider"></li> <li class="close-sidebar">Close</li> </ul>';
frappe.templates["list_sidebar_stat"] = '<ul class="list-unstyled sidebar-menu sidebar-stat"> <li class="divider"></li> <li class="h6 stat-label">{%= label %}</li> {% if(!stat.length) { %} <li class="stat-no-records text-muted">{%= __("No records tagged.") %}</li> {% } else { for (var i=0, l=stat.length; i < l; i++) { var stat_label = stat[i][0]; var stat_count = stat[i][1]; %} <li> <a class="stat-link badge-hover" data-label="{%= stat_label %}" data-field="{%= field %}"> <span class="badge">{%= stat_count %}</span> <span>{%= __(stat_label) %}</span> </a> </li> {% } } %} </ul> ';
frappe.templates["list_item_main"] = '<div class="row"> {% var total_cols=0; for (var i=0, l=columns.length; i < l; i++ ) { var col = columns[i], value=data[col.fieldname]; total_cols += parseInt(col.colspan); %} {% if (total_cols <= 12) { %} <div class="col-sm-{%= col.colspan %} list-col ellipsis {% if(col.type==="Subject") { if (right_column) { %} col-xs-9 {% } else { %} col-xs-12 {% } %} {% } else if(right_column && col.fieldname===right_column) { %} col-xs-3 {% } else { %} hidden-xs {% } %} {% if(col.df && ["Int", "Float", "Currency", "Percent"].indexOf(col.df.fieldtype)!==-1) { %}text-right{% } %}" {% if(col.type!=="Indicator" && col.title) { %}title="{%= col.title + ": " + value %}"{% } %}> {% if(col.type!=="Indicator") { %}<span class="list-value">{% } %} {% if (col.type==="Subject") { %} {%= subject %} {% } else if (col.type==="Indicator") { %} {%= list.get_indicator(data) %} {% } else if (col.render) { %} {%= col.render(data) %} {% } else if (col.fieldtype==="Image") { %} {% if(data[col.df.options]) { %} <img src="{%= data[col.df.options] %}" style="max-height: 30px; max-width: 100%;"> {% } else { %} <div class="missing-image small"><span class="octicon octicon-circle-slash"></span></div> {% } %} {% } else if(col.fieldtype==="Select") { %} <span class="filterable indicator {%= frappe.utils.guess_colour(value) %}" data-filter="{%= col.fieldname %},=,{%= value %}">{%= __(value) %}</span> {% } else if(col.fieldtype==="Link") { %} <a class="filterable h6 text-muted grey" data-filter="{%= col.fieldname %},=,{%= value %}">{%= value %}</a> {% } else { %} {% if(list.settings.formatters && list.settings.formatters[col.fieldname]) { %} {{ list.settings.formatters[col.fieldname](value, col.df, data) }} {% } else { %} {{ frappe.format(value, col.df, null, data) }} {% } %} {% } %} {% if(col.type!=="Indicator") { %}</span>{% } %} </div> {% } %} {% } %} </div> ';
frappe.templates["list_item_row"] = '<div class="row doclist-row {% if (data._checkbox) { %} has-checkbox {% } %}"> <div class="col-xs-10 {% if (list.meta.title_field && !list.settings.hide_name_column) { %} col-sm-8 {% } else { %} col-sm-10 {% } %} list-row-left">  {%= main %} </div>  {% if (list.meta.title_field && !list.settings.hide_name_column) { var is_different = data.name !== data[list.meta.title_field]; %} <div class="list-col col-sm-2 hidden-xs text-right ellipsis list-row-id"> {% if (is_different) { %} <a class="text-muted list-value" href="#Form/{%= data._doctype_encoded %}/{%= data._name_encoded %}"> {%= data.name %}</a> {% } %} </div> {% } %}  <div class="list-col col-sm-2 col-xs-2 text-right list-row-right" style="padding-left:0px"> <div class="visible-xs list-row-indicator">{%= list.get_indicator_dot(data) %}</div>  {%= frappe.render_template("item_assigned_to_comment_count", { data: data }) %} </div> </div> ';
frappe.templates["list_item_main_head"] = '<div class="row"> {% var total_cols=0; for (var i=0, l=columns.length; i < l; i++ ) { var col = columns[i]; total_cols += parseInt(col.colspan); %} {% if (total_cols <= 12) { %} <div class="col-sm-{%= col.colspan %} list-col ellipsis h6 text-muted {% if(col.type==="Subject") { if (right_column) { %} col-xs-9 {% } else { %} col-xs-12 {% } %} {% } else if(right_column && col.fieldname===right_column) { %} col-xs-3 {% } else { %} hidden-xs {% } %} {% if(col.df && ["Int", "Float", "Currency", "Percent"].indexOf(col.df.fieldtype)!==-1) { %}text-right{% } %}"> {% if (col.type==="Subject") { %} {%= frappe.render_template("header_select_all_like_filter", { _checkbox: _checkbox }) %} {% } %} <span class="list-value">{%= __(col.title) || __(col.label) || "" %}</span> </div> {% } %} {% } %} </div> ';
frappe.templates["list_item_row_head"] = '<div class="list-row list-row-head"> <div class="row doclist-row"> <div class="col-xs-10 {% if (list.meta.title_field && !list.settings.hide_name_column) { %} col-sm-8 {% } else { %} col-sm-10 {% } %} list-row-left">  {%= main %} </div>  {% if (list.meta.title_field && !list.settings.hide_name_column) { %} <div class="list-col col-sm-2 hidden-xs text-right"> </div> {% } %}  <div class="list-col col-sm-2 hidden-xs text-right list-row-right"></div> </div> </div> ';
frappe.templates["list_item_subject"] = '{% if (_checkbox) { %} <input class="list-delete" type="checkbox" style="margin: 0 7px 0 0; vertical-align: middle;"> {% } %} <span class="liked-by" data-liked-by=\'{{ JSON.stringify(_liked_by) }}\'> <i class="octicon octicon-heart {% if (_liked_by.indexOf(_user)===-1) { %} text-extra-muted not-liked {% }%} fa-fw like-action" data-name="{{ _name }}" data-doctype="{{ doctype }}"> </i> <span class="likes-count">{{ (_liked_by.length > 9 ? "9+" : _liked_by.length) || "" }}</span> </span> <a class="grey list-id {{ css_seen }}" data-name="{{ _name }}" style="margin-right: 7px; margin-left: -8px;" href="#Form/{{ _doctype_encoded }}/{{ _name_encoded }}" title="{{ _full_title }}">{{ strip_html(_title) }}</a> {% if (_workflow && !_without_workflow) { %} <span class="label label-{{ _workflow.style }} filterable" data-filter="{{ _workflow.fieldname }},=,{{ _workflow.value }}"> {%= _workflow.value %}</span> {% } %} ';
frappe.templates["list_permission_footer"] = '<div style="padding-left: 20px;"> <i class="octicon octicon-lock" style="float: left; margin-left: -20px;"></i> {% for(var i=0; i < condition_list.length; i++) { var conditions = condition_list[i]; %} <div style="margin-bottom: 5px;"> {% if (i > 0) { %}<span style="margin-right: 10px;">{{ __("Or") }}</span>{% } %} {% for(key in conditions) { %} <span class="label label-default" style="margin-right: 10px;"> {% if(conditions[key].length) { %} {{ key }} = {{ frappe.utils.comma_or(conditions[key]) }} {% } else { %} {{ __("{0} is not set", [key]) }} {% } %} </span> {% } %} </div> {% } %} </div>  ';
frappe.views.get_listview=function(doctype,parent){if(frappe.listviews[doctype]){var listview=new frappe.listviews[doctype](parent);}else{var listview=new frappe.views.ListView(parent,doctype);}
return listview;}
frappe.views.ListView=Class.extend({init:function(doclistview,doctype){this.doclistview=doclistview;this.doctype=doctype;this.meta=frappe.get_doc("DocType",this.doctype);this.image_field=this.meta.image_field||'image';this.settings=frappe.listview_settings[this.doctype]||{};if(this.meta.__listview_template){this.template_name=doctype+"_listview";frappe.templates[this.template_name]=this.meta.__listview_template;}
this.set_fields();this.set_columns();this.id_list=[];if(this.settings.group_by)
this.group_by=this.settings.group_by;var me=this;this.doclistview.onreset=function(){me.id_list=[];}
this.order_by=this.settings.order_by;this.group_by=this.settings.group_by;},set_fields:function(){var me=this;var t="`tab"+this.doctype+"`.";this.fields=[];this.stats=['_user_tags'];var add_field=function(fieldname){field=t+"`"+fieldname+"`"
if(me.fields.indexOf(field)===-1)
me.fields.push(field);}
$.each(['name','owner','docstatus','_user_tags','_comments','modified','modified_by','_assign','_liked_by','_seen'],function(i,fieldname){add_field(fieldname);})
if(this.meta.title_field){this.title_field=this.meta.title_field;add_field(this.meta.title_field);}
if(frappe.meta.has_field(this.doctype,'enabled')){add_field('enabled');};if(frappe.meta.has_field(this.doctype,'disabled')){add_field('disabled');};this.workflow_state_fieldname=frappe.workflow.get_state_fieldname(this.doctype);if(this.workflow_state_fieldname){if(!frappe.workflow.workflows[this.doctype]["override_status"]){add_field(this.workflow_state_fieldname);}
this.stats.push(this.workflow_state_fieldname);}
$.each(this.meta.fields,function(i,d){if(d.in_list_view&&frappe.perm.has_perm(me.doctype,d.permlevel,"read")){if(d.fieldtype=="Image"&&d.options){add_field(d.options);}else{add_field(d.fieldname);}
if(d.fieldtype=="Currency"&&d.options){if(d.options.indexOf(":")!=-1){add_field(d.options.split(":")[1]);}else{add_field(d.options);};}}});if(this.settings.add_fields){$.each(this.settings.add_fields,function(i,d){if(d.indexOf("`tab")===-1){d="`tab"+me.doctype+"`."+d;}
if(me.fields.indexOf(d)==-1)
me.fields.push(d);});}},set_columns:function(){var me=this;this.columns=[];var name_column={colspan:this.settings.colwidths&&this.settings.colwidths.subject||6,type:"Subject",title:"Name"};if(this.meta.title_field){name_column.title=frappe.meta.get_docfield(this.doctype,this.meta.title_field).label;}
this.columns.push(name_column);this.total_colspans=this.columns[0].colspan;if(frappe.has_indicator(this.doctype)){this.columns.push({colspan:this.settings.colwidths&&this.settings.colwidths.indicator||3,type:"Indicator",title:"Status"});this.total_colspans+=this.columns[1].colspan;}
var overridden=$.map(this.settings.add_columns||[],function(d){return d.content;});var docfields_in_list_view=frappe.get_children("DocType",this.doctype,"fields",{"in_list_view":1}).sort(function(a,b){return a.idx-b.idx})
$.each(docfields_in_list_view,function(i,d){if(in_list(overridden,d.fieldname)||d.fieldname===me.title_field){return;}
if(me.total_colspans<12){me.add_column(d);}});if(this.settings.add_columns){$.each(this.settings.add_columns,function(i,d){if(me.total_colspans<12){if(typeof d==="string"){me.add_column(frappe.meta.get_docfield(me.doctype,d));}else{me.columns.push(d);me.total_colspans+=parseInt(d.colspan);}}});}
var empty_cols=flt(12-this.total_colspans);while(empty_cols>0){for(var i=0,l=this.columns.length;i<l&&empty_cols>0;i++){this.columns[i].colspan=cint(this.columns[i].colspan)+1;empty_cols=empty_cols-1;}}},add_column:function(df){var colspan=3;if(in_list(["Int","Percent"],df.fieldtype)){colspan=2;}else if(in_list(["Check","Image"],df.fieldtype)){colspan=1;}else if(in_list(["name","subject","title"],df.fieldname)){colspan=4;}else if(df.fieldtype=="Text Editor"||df.fieldtype=="Text"){colspan=4;}
if(df.columns&&df.columns>0){colspan=df.columns;}
else if(this.settings.column_colspan&&this.settings.column_colspan[df.fieldname]){colspan=this.settings.column_colspan[df.fieldname];}
this.total_colspans+=parseInt(colspan);var col={colspan:colspan,content:df.fieldname,type:df.fieldtype,df:df,fieldtype:df.fieldtype,fieldname:df.fieldname,title:__(df.label)};if(this.settings.column_render&&this.settings.column_render[df.fieldname]){col.render=this.settings.column_render[df.fieldname];}
this.columns.push(col);},render:function(row,data){this.prepare_data(data);if(in_list(this.id_list,data.name)){$(row).toggle(false);return;}else{this.id_list.push(data.name);}
this['render_row_'+this.doclistview.current_view](row,data);if(this.settings.post_render_item){this.settings.post_render_item(this,row,data);}
this.render_tags(row,data);},render_row_List:function(row,data){var main=frappe.render_template("list_item_main",{data:data,columns:this.columns,subject:this.get_avatar_and_id(data,true),list:this,right_column:this.settings.right_column});$(frappe.render_template("list_item_row",{data:data,main:main,list:this,right_column:this.settings.right_column})).appendTo(row);},render_row_Image:function(row,data){this.allowed_type=["Check","Currency","Data","Date","Datetime","Float","Int","Link","Percent","Select","Read Only","Time"];var image_url=(data.image&&window.cordova&&data.image.indexOf('http')===-1)?frappe.base_url+data[this.image_field]:data[this.image_field];img_col=$(frappe.render_template("image_view_item_row",{data:data,list:this,columns:this.columns,allowed_type:this.allowed_type,item_image:image_url?"url('"+image_url+"')":null,color:frappe.get_palette(data.item_name),subject:this.get_avatar_and_id(data,true),right_column:this.settings.right_column})).data("data",data).appendTo($(row).find(".image-view-marker"));},render_tags:function(row,data){var me=this;var row2=$('<div class="tag-row">\
   <div class="list-tag xs-hidden"></div>\
   <div class="clearfix"></div>\
  </div>').appendTo(row);if(!me.doclistview.tags_shown){row2.addClass("hide");}
var tag_editor=new frappe.ui.TagEditor({parent:row2.find(".list-tag"),frm:{doctype:this.doctype,docname:data.name},list_sidebar:me.doclistview.list_sidebar,user_tags:data._user_tags,on_change:function(user_tags){data._user_tags=user_tags;}});tag_editor.wrapper.on("click",".tagit-label",function(){me.doclistview.set_filter("_user_tags",$(this).text());});},get_avatar_and_id:function(data,without_workflow){data._without_workflow=without_workflow;data.css_seen='';if(data._seen){var seen=JSON.parse(data._seen);if(seen&&seen.indexOf(frappe.session.user)!==-1){data.css_seen='seen'}}
return frappe.render_template("list_item_subject",data);},get_indicator:function(doc){var indicator=frappe.get_indicator(doc,this.doctype);if(indicator){return'<span class="indicator '+indicator[1]+' filterable" data-filter="'
+indicator[2]+'">'+__(indicator[0])+'<span>';}else{return"";}},get_indicator_dot:function(doc){var indicator=frappe.get_indicator(doc,this.doctype);if(!indicator){return"";}
return'<span class="indicator '+indicator[1]+'" title="'+__(indicator[0])+'"></span>';},prepare_data:function(data){if(data.modified)
this.prepare_when(data,data.modified);data._liked_by=data._liked_by?JSON.parse(data._liked_by):[];data._checkbox=(frappe.model.can_delete(this.doctype)||this.settings.selectable)&&!this.no_delete
data._doctype_encoded=encodeURIComponent(data.doctype);data._name=data.name.replace(/"/g,'\"');data._name_encoded=encodeURIComponent(data.name);data._submittable=frappe.model.is_submittable(this.doctype);data._title=strip_html(data[this.title_field||"name"]||data["name"]);data._full_title=data._title;if(data._title.length>40){data._title=data._title.slice(0,40)+"...";}
data._workflow=null;if(this.workflow_state_fieldname){data._workflow={fieldname:this.workflow_state_fieldname,value:data[this.workflow_state_fieldname],style:frappe.utils.guess_style(data[this.workflow_state_fieldname])}}
data._user=user;data._tags=$.map((data._user_tags||"").split(","),function(v){return v?v:null;});data._assign_list=data._assign?JSON.parse(data._assign):[];for(key in data){if(data[key]==null){data[key]='';}}
if(this.settings.prepare_data)
this.settings.prepare_data(data);},prepare_when:function(data,date_str){if(!date_str)date_str=data.modified;data.when=(dateutil.str_to_user(date_str)).split(' ')[0];var diff=dateutil.get_diff(dateutil.get_today(),date_str.split(' ')[0]);if(diff==0){data.when=comment_when(date_str);}
if(diff==1){data.when=__('Yesterday')}
if(diff==2){data.when=__('2 days ago')}},render_bar_graph:function(parent,data,field,label){var args={percent:data[field],label:__(label)}
$(parent).append(repl('<span class="progress" style="width: 100%; float: left; margin: 5px 0px;"> \
   <span class="progress-bar" title="%(percent)s% %(label)s" \
    style="width: %(percent)s%;"></span>\
  </span>',args));},render_icon:function(parent,icon_class,label){var icon_html="<i class='%(icon_class)s' title='%(label)s'></i>";$(parent).append(repl(icon_html,{icon_class:icon_class,label:__(label)||''}));}});;frappe.views.CalendarBase=Class.extend({add_filters:function(){var me=this;if(this.filters){$.each(this.filters,function(i,df){df.change=function(){me.refresh();};me.page.add_field(df);});}},set_filter:function(doctype,value){var me=this;if(this.filters){$.each(this.filters,function(i,df){if(df.options===value)
me.page.fields_dict[df.fieldname].set_input(value);return false;});}},get_filters:function(){var filter_vals={},me=this;if(this.filters){$.each(this.filters,function(i,df){filter_vals[df.fieldname||df.label]=me.page.fields_dict[df.fieldname||df.label].get_parsed_value();});}
return filter_vals;},set_filters_from_route_options:function(){var me=this;if(frappe.route_options){$.each(frappe.route_options,function(k,value){if(me.page.fields_dict[k]){me.page.fields_dict[k].set_input(value);};})
frappe.route_options=null;me.refresh();return false;}}});frappe.provide("frappe.views.calendar");frappe.provide("frappe.views.calendars");frappe.views.CalendarFactory=frappe.views.Factory.extend({make:function(route){var me=this;frappe.require(['assets/frappe/js/lib/fullcalendar/fullcalendar.min.css','assets/frappe/js/lib/fullcalendar/fullcalendar.min.js'],function(){frappe.model.with_doctype(route[1],function(){var options={doctype:route[1]};$.extend(options,frappe.views.calendar[route[1]]||{});frappe.views.calendars[route[1]]=new frappe.views.Calendar(options);});});}});frappe.views.Calendar=frappe.views.CalendarBase.extend({init:function(options){$.extend(this,options);this.make_page();this.setup_options();this.make();},make_page:function(){var me=this;this.parent=frappe.make_page();$(this.parent).on("show",function(){me.set_filters_from_route_options();});this.page=this.parent.page;var module=locals.DocType[this.doctype].module;this.page.set_title(__("Calendar")+" - "+__(this.doctype));frappe.breadcrumbs.add(module,this.doctype)
this.add_filters();this.page.add_field({fieldtype:"Date",label:"Date",fieldname:"selected","default":frappe.datetime.month_start(),input_css:{"z-index":1},change:function(){var selected=$(this).val();if(selected){me.$cal.fullCalendar("gotoDate",frappe.datetime.user_to_obj(selected));}}});this.page.set_primary_action(__("New"),function(){var doc=frappe.model.get_new_doc(me.doctype);frappe.set_route("Form",me.doctype,doc.name);});$.each(frappe.boot.calendars,function(i,doctype){if(frappe.model.can_read(doctype)){me.page.add_menu_item(__(doctype),function(){frappe.set_route("Calendar",doctype);});}});this.page.page_actions.find(".menu-btn-group-label").text(__("Type"));$(this.parent).on("show",function(){me.$cal.fullCalendar("refetchEvents");})},make:function(){var me=this;this.$wrapper=this.page.main;this.$cal=$("<div>").appendTo(this.$wrapper);footnote=frappe.utils.set_footnote(this,this.$wrapper,__("Select or drag across time slots to create a new event."));footnote.css({"border-top":"0px"});this.$cal.fullCalendar(this.cal_options);this.set_css();},set_css:function(){this.$wrapper.find("button.fc-state-default").removeClass("fc-state-default").addClass("btn btn-default");this.$wrapper.find(".fc-button-group").addClass("btn-group");var btn_group=this.$wrapper.find(".fc-right .fc-button-group");btn_group.find(".fc-state-active").addClass("active");btn_group.find(".btn").on("click",function(){btn_group.find(".btn").removeClass("active");$(this).addClass("active");});},field_map:{"id":"name","start":"start","end":"end","allDay":"all_day",},styles:{"standard":{"color":"#F0F4F7"},"important":{"color":"#FFDCDC"},"danger":{"color":"#FFDCDC"},"warning":{"color":"#FFE6BF",},"success":{"color":"#E4FFC1",},"info":{"color":"#E8DDFF"},"inverse":{"color":"#D9F6FF"},"":{"color":"#F0F4F7"}},get_system_datetime:function(date){date._offset=moment.user_utc_offset;return frappe.datetime.convert_to_system_tz(date);},setup_options:function(){var me=this;this.cal_options={header:{left:'prev,next today',center:'title',right:'month,agendaWeek,agendaDay'},editable:true,selectable:true,selectHelper:true,forceEventDuration:true,events:function(start,end,timezone,callback){return frappe.call({method:me.get_events_method||"frappe.desk.calendar.get_events",type:"GET",args:me.get_args(start,end),callback:function(r){var events=r.message;me.prepare_events(events);callback(events);}})},eventClick:function(event,jsEvent,view){var doctype=event.doctype||me.doctype;if(frappe.model.can_read(doctype)){frappe.set_route("Form",doctype,event.name);}},eventDrop:function(event,delta,revertFunc,jsEvent,ui,view){me.update_event(event,revertFunc);},eventResize:function(event,delta,revertFunc,jsEvent,ui,view){me.update_event(event,revertFunc);},select:function(startDate,endDate,jsEvent,view){if(view.name==="month"&&(endDate-startDate)===86400000){return;}
var event=frappe.model.get_new_doc(me.doctype);event[me.field_map.start]=me.get_system_datetime(startDate);if(me.field_map.end)
event[me.field_map.end]=me.get_system_datetime(endDate);if(me.field_map.allDay){var all_day=(startDate._ambigTime&&endDate._ambigTime)?1:0;event[me.field_map.allDay]=all_day;if(all_day)
event[me.field_map.end]=me.get_system_datetime(moment(endDate).subtract(1,"s"));}
frappe.set_route("Form",me.doctype,event.name);},dayClick:function(date,allDay,jsEvent,view){jsEvent.day_clicked=true;return false;}};if(this.options){$.extend(this.cal_options,this.options);}},get_args:function(start,end){var args={doctype:this.doctype,start:this.get_system_datetime(start),end:this.get_system_datetime(end),filters:this.get_filters()};return args;},refresh:function(){this.$cal.fullCalendar('refetchEvents');},prepare_events:function(events){var me=this;$.each(events||[],function(i,d){d.id=d.name;d.editable=frappe.model.can_write(d.doctype||me.doctype);if(d.docstatus&&d.docstatus>0){d.editable=false;}
$.each(me.field_map,function(target,source){d[target]=d[source];});if(!me.field_map.allDay)
d.allDay=1;d.start=frappe.datetime.convert_to_user_tz(d.start);d.end=frappe.datetime.convert_to_user_tz(d.end);me.fix_end_date_for_event_render(d);if(me.get_css_class){$.extend(d,me.styles[me.get_css_class(d)]||{});}else if(me.style_map){$.extend(d,me.styles[me.style_map[d.status]]||{});}else{$.extend(d,me.styles[frappe.utils.guess_style(d.status,"standard")]);}
d["textColor"]="#36414C";})},update_event:function(event,revertFunc){var me=this;frappe.model.remove_from_locals(me.doctype,event.name);return frappe.call({method:me.update_event_method||"frappe.desk.calendar.update_event",args:me.get_update_args(event),callback:function(r){if(r.exc){show_alert(__("Unable to update event"));revertFunc();}},error:function(){revertFunc();}});},get_update_args:function(event){var me=this;var args={name:event[this.field_map.id]};args[this.field_map.start]=me.get_system_datetime(event.start);if(this.field_map.allDay)
args[this.field_map.allDay]=(event.start._ambigTime&&event.end._ambigTime)?1:0;if(this.field_map.end){if(!event.end){event.end=event.start.add(1,"hour");}
if(args[this.field_map.allDay]){args[this.field_map.end]=me.get_system_datetime(moment(event.end).subtract(1,"s"));}}
args.doctype=event.doctype||this.doctype;return{args:args,field_map:this.field_map};},fix_end_date_for_event_render:function(event){if(event.allDay){event.start=event.start?$.fullCalendar.moment(event.start).stripTime():null;event.end=event.end?$.fullCalendar.moment(event.end).add(1,"day").stripTime():null;}}});frappe.templates["blueimp-gallery"] = '<div id="blueimp-gallery" class="blueimp-gallery blueimp-gallery-controls"> <div class="slides"></div> <h3 class="title"></h3> <a class="prev">‹</a> <a class="next">›</a> <a class="close">×</a> <a class="play-pause"></a> <ol class="indicator"></ol> </div>';
frappe.templates["image_view_item_row"] = '<div class="col-xs-6 col-sm-4 col-md-3 doclist-row has-checkbox image-view ellipsis"> <div class="row"> <div class="col-xs-12 image-view-col"> {%= subject %} </div> </div>  <div class="row"> <div class="col-xs-12 image-view-col" align="center"> <a data-name="{{ data.name }}" title="{{ data.name }}" href="#Form/{{ data.doctype }}/{{ data.name }}"> <div class="pos-item-image image-field" data-name="{{ data.name }}" style="{% if (item_image) { %} background-image: {%= item_image %}; {% } else { %} background-color: {{ color }}; {% } %} border: 0px;"> {% if (!item_image) { %}{%= frappe.get_abbr(data.name) %}{% } %} <button class="btn btn-info zoom-view"> <i class="fa fa-zoom-in"></i> </button> <table class="table table-condensed field-info"> {% for (var i=0, l=columns.length; i < l; i++ ) { var col = columns[i], value=data[col.fieldname]; %} {% if(in_list(allowed_type, col.fieldtype)) { %} <tr> <td align="right" width="40%">{%= col.title %}</td> <td align="left" width="60%">{%= value %}</td> </tr> {% } %} {% } %} </table> </div> </a> </div> </div> <div class="row">  <div class="col-xs-12 image-view-col"> <div class="row"> <div class="col-xs-4">{%= list.get_indicator(data) %}</div> <div class="col-xs-8 text-right">  {%= frappe.render_template("item_assigned_to_comment_count", { data: data }) %} </div> </div> </div> </div> </div> ';
frappe.templates["image_view_item_main_head"] = '<div class="row"> <div class="col-xs-12"> {%= frappe.render_template("header_select_all_like_filter", { _checkbox: _checkbox }) %} </div> </div>';
frappe.templates["header_select_all_like_filter"] = '{% if (_checkbox) { %} <input class="list-select-all" type="checkbox" style="margin-right: 7px; margin-top: 2px;" title="{%= __("Select All") %}"> {% } %} <i class="fa-fw octicon octicon-heart text-extra-muted not-liked like-action list-liked-by-me" title="{%= __("Likes") %}"></i>';
frappe.templates["item_assigned_to_comment_count"] = '<div class="hidden-xs"> <span class="list-row-modified text-muted"> {%= comment_when(data.modified, true) %} </span> {% if (data._assign_list.length) { %} <span class="filterable" data-filter="_assign,like,%{%= data._assign_list[data._assign_list.length - 1] %}%"> {%= frappe.avatar(data._assign_list[data._assign_list.length - 1]) %}</span> {% } else { %} <span class="avatar avatar-small avatar-empty"></span> {% } %} <span class="list-comment-count small {% if(!data._comment_count) { %} text-extra-muted {% } else { %} text-muted {% } %}"> <i class="octicon octicon-comment-discussion"></i> {%= (data._comment_count > 99 ? "99+" : data._comment_count) || 0 %} </span> </div> ';
frappe.provide("frappe.treeview_settings");cur_tree=null;frappe.views.TreeFactory=frappe.views.Factory.extend({make:function(route){frappe.model.with_doctype(route[1],function(){var options={doctype:route[1],meta:frappe.get_meta(route[1])};if(!frappe.treeview_settings[route[1]]&&!frappe.meta.get_docfield(route[1],"is_group")){msgprint(__("Tree view not available for {0}",[route[1]]));return false;}
$.extend(options,frappe.treeview_settings[route[1]]||{});new frappe.views.TreeView(options);});}});frappe.views.TreeView=Class.extend({init:function(opts){var me=this;this.opts={};this.opts.get_tree_root=true;$.extend(this.opts,opts);this.doctype=opts.doctype;this.args={doctype:me.doctype};this.page_name=frappe.get_route_str();this.get_tree_nodes=me.opts.get_tree_nodes||"frappe.desk.treeview.get_children";this.get_permissions();this.make_page();this.make_filters();if(me.opts.get_tree_root){this.get_root();}
this.set_menu_item();this.set_primary_action();},get_permissions:function(){this.can_read=frappe.model.can_read(this.doctype);this.can_create=frappe.boot.user.can_create.indexOf(this.doctype)!==-1||frappe.boot.user.in_create.indexOf(this.doctype)!==-1;this.can_write=frappe.model.can_write(this.doctype);this.can_delete=frappe.model.can_delete(this.doctype);},make_page:function(){var me=this;this.parent=frappe.container.add_page(this.page_name);frappe.ui.make_app_page({parent:this.parent,single_column:true});this.page=this.parent.page;frappe.container.change_to(this.page_name);frappe.breadcrumbs.add(me.opts.breadcrumb||locals.DocType[me.doctype].module);this.page.set_title(me.opts.title||__('{0} Tree',[__(this.doctype)]));this.page.main.css({"min-height":"300px","padding-bottom":"25px"});this.page.add_inner_button(__('Expand All'),function(){me.tree.rootnode.load_all();})},make_filters:function(){var me=this;frappe.treeview_settings.filters=[]
$.each(this.opts.filters||[],function(i,filter){if(frappe.route_options&&frappe.route_options[filter.fieldname]){filter.default=frappe.route_options[filter.fieldname]}
me.page.add_field(filter).$input.change(function(){me.args[$(this).attr("data-fieldname")]=$(this).val();frappe.treeview_settings.filters=me.args;me.make_tree();})
if(filter.default){$("[data-fieldname='"+filter.fieldname+"']").trigger("change");}})},get_root:function(){var me=this;frappe.call({method:me.get_tree_nodes,args:me.args,callback:function(r){if(r.message){me.root=r.message[0]["value"];me.make_tree();}}})},make_tree:function(){var me=this;$(me.parent).find(".tree").remove()
this.tree=new frappe.ui.Tree({parent:$(me.parent).find(".layout-main-section"),label:me.args[me.opts.root_label]||me.opts.root_label||me.root,args:me.args,method:me.get_tree_nodes,toolbar:me.get_toolbar(),get_label:me.opts.get_label,onrender:me.opts.onrender});cur_tree=this.tree;},get_toolbar:function(){var me=this;var toolbar=[{toggle_btn:true},{label:__("Edit"),condition:function(node){return!node.root&&me.can_read;},click:function(node){frappe.set_route("Form",me.doctype,node.label);}},{label:__("Add Child"),condition:function(node){return me.can_create&&node.expandable;},click:function(node){me.new_node();},btnClass:"hidden-xs"},{label:__("Rename"),condition:function(node){return!node.root&&me.can_write;},click:function(node){frappe.model.rename_doc(me.doctype,node.label,function(new_name){node.$a.html(new_name);});},btnClass:"hidden-xs"},{label:__("Delete"),condition:function(node){return!node.root&&me.can_delete;},click:function(node){frappe.model.delete_doc(me.doctype,node.label,function(){node.parent.remove();});},btnClass:"hidden-xs"}]
if(this.opts.toolbar&&this.opts.extend_toolbar){return toolbar.concat(this.opts.toolbar)}else if(this.opts.toolbar&&!this.opts.extend_toolbar){return this.opts.toolbar}else{return toolbar}},new_node:function(){var me=this;var node=me.tree.get_selected_node();if(!(node&&node.expandable)){frappe.msgprint(__("Select a group node first."));return;}
this.prepare_fields();var d=new frappe.ui.Dialog({title:__('New {0}',[__(me.doctype)]),fields:me.fields})
me.args["parent_"+me.doctype.toLowerCase().replace(/ /g,'_')]=me.args["parent"];d.set_value("is_group",0);d.set_values(me.args);d.set_primary_action(__("Create New"),function(){var btn=this;var v=d.get_values();if(!v)return;var node=me.tree.get_selected_node();v.parent=node.label;v.doctype=me.doctype;if(node.root){v.is_root=1;v.parent_account=null;}else{v.is_root=0;v.root_type=null;}
$.extend(me.args,v)
return frappe.call({method:me.opts.add_tree_node||"frappe.desk.treeview.add_node",args:me.args,callback:function(r){if(!r.exc){d.hide();if(node.expanded){node.toggle_node();}
node.reload();}}});});d.show();},prepare_fields:function(){var me=this;this.fields=[{fieldtype:'Check',fieldname:'is_group',label:__('Group Node'),description:__("Further nodes can be only created under 'Group' type nodes")}]
if(this.opts.fields){this.fields=this.opts.fields;}
this.ignore_fields=this.opts.ignore_fields||[];var mandatory_fields=$.map(me.opts.meta.fields,function(d){return(d.reqd||d.bold&&!d.read_only)?d:null});var opts_field_names=this.fields.map(function(d){return d.fieldname})
mandatory_fields.map(function(d){if($.inArray(d.fieldname,me.ignore_fields)===-1&&$.inArray(d.fieldname,opts_field_names)===-1){me.fields.push(d)}})},set_primary_action:function(){var me=this;if(!this.opts.disable_add_node){me.page.set_primary_action(__("New"),function(){me.new_node();},"octicon octicon-plus")}},set_menu_item:function(){var me=this;this.menu_items=[{label:__('View List'),action:function(){frappe.set_route('List',me.doctype);}},{label:__('Refresh'),action:function(){me.make_tree();}},]
if(me.opts.menu_items){me.menu_items.push.apply(me.menu_items,me.opts.menu_items)}
$.each(me.menu_items,function(i,menu_item){var has_perm=true;if(menu_item["condition"]){has_perm=eval(menu_item["condition"]);}
if(has_perm){me.page.add_menu_item(menu_item["label"],menu_item["action"]);}})}});;var Gantt=Class.extend({init:function(opts){this.opts=opts;this.events=this.opts.events;this.set_defaults();this.prepare();this.render();},set_defaults:function(){var defaults={label_width:38,header_height:50,column_width:30,step:24,valid_view_modes:["Quarter Day","Half Day","Day","Week","Month"],bar:{height:20},arrow:{curve:5},view_mode:'Day',padding:18,date_format:'DD-MM-YYYY'};for(var key in defaults){if(defaults.hasOwnProperty(key)){if(!this.opts[key])this.opts[key]=defaults[key];}}
this._bars=[];this._arrows=[];this.groups={};var me=this;this.tasks=this.opts.tasks.map(function(task,i){task._start=moment(task.start,me.opts.date_format);task._end=moment(task.end,me.opts.date_format);task._index=i;if(!task.start||!task.end){task._start=moment().startOf('day');task._end=moment().startOf('day').add(2,'days');task.invalid=true;}
return task;});this.set_scale(this.opts.view_mode);},prepare:function(){this.start=this.end=undefined;this.prepare_dates();this.render_canvas();},render:function(){this.clear();this.setup_groups();this.make_grid();this.make_dates();this.make_bars();this.make_arrows();this.set_arrows_on_bars();this.setup_events();this.set_width();this.set_scroll_position();this.bind();},bind:function(){this.bind_grid_click();},render_canvas:function(){this.canvas=Snap(this.opts.parent_selector);this.canvas.addClass("gantt");},clear:function(){this.canvas.clear();this._bars=[];this._arrows=[];},prepare_dates:function(){var me=this;this.tasks.forEach(function(task){if(!me.start||task._start<me.start){me.start=task._start;}
if(!me.end||task._end>me.end){me.end=task._end;}});this.set_gantt_dates();this.setup_dates();},set_gantt_dates:function(){var me=this;if(me.view_is(['Quarter Day','Half Day'])){me.start=me.start.clone().subtract(7,'day');me.end=me.end.clone().add(7,'day');}else if(me.view_is('Month')){me.start=me.start.clone().startOf('year');me.end=me.end.clone().endOf('month').add(1,'year');}else{me.start=me.start.clone().startOf('month').subtract(1,'month');me.end=me.end.clone().endOf('month').add(1,'month');}},setup_dates:function(){this.dates=[];var cur_date=null;while(cur_date===null||cur_date<this.end){if(!cur_date){cur_date=this.start.clone();}else{cur_date=this.view_is('Month')?cur_date=cur_date.clone().add(1,'month'):cur_date.clone().add(this.opts.step,'hours');}
this.dates.push(cur_date);}},setup_groups:function(){var me=this;["grid","date","arrow","progress","bar","details"].forEach(function(name){me.groups[name]=me.canvas.group().attr({'id':name});});},get_view_modes:function(){return this.opts.valid_view_modes||[];},set_view_mode:function(mode){this.set_scale(mode);this.prepare();this.render();},set_scale:function(scale){this.view_mode=scale;this.events.on_viewmode_change(scale);if(scale==='Day'){this.opts.step=24;this.opts.column_width=38;}
else if(scale==='Half Day'){this.opts.step=24/2;this.opts.column_width=38;}
else if(scale==='Quarter Day'){this.opts.step=24/4;this.opts.column_width=38;}
else if(scale==='Week'){this.opts.step=24*7;this.opts.column_width=140;}
else if(scale==='Month'){this.opts.step=24*30;this.opts.column_width=120;}},add_task:function(task){task._index=this.tasks.length;this.tasks.push(task);this.prepare_dates();},set_width:function(){var cur_width=this.canvas.node.getBoundingClientRect().width;var actual_width=this.canvas.getBBox().width;if(cur_width<actual_width)
this.canvas.attr("width",actual_width);},set_scroll_position:function(){var parent_element=document.querySelector(this.opts.parent_selector).parentElement;if(!parent_element)return;var scroll_pos=this.get_min_date().diff(this.start,'hours')/this.opts.step*this.opts.column_width;parent_element.scrollLeft=scroll_pos;},get_min_date:function(){return this.tasks.reduce(function(acc,curr){return curr._start.isSameOrBefore(acc._start)?curr:acc;})._start;},make_grid:function(){this.make_grid_background();this.make_grid_rows();this.make_grid_header();this.make_grid_ticks();this.make_grid_highlights();},make_grid_background:function(){var me=this;var grid_width=this.opts.label_width+this.dates.length*this.opts.column_width,grid_height=this.opts.header_height+this.opts.padding+
(this.opts.bar.height+this.opts.padding)*this.tasks.length;this.canvas.rect(0,0,grid_width,grid_height).addClass('grid-background').appendTo(this.groups.grid);this.canvas.attr({height:grid_height+me.opts.padding,width:"100%"});},make_grid_header:function(){var me=this;var header_width=this.opts.label_width+this.dates.length*this.opts.column_width,header_height=this.opts.header_height+10;me.canvas.rect(0,0,header_width,header_height).addClass('grid-header').appendTo(me.groups.grid);},make_grid_rows:function(){var
me=this,rows=me.canvas.group().appendTo(me.groups.grid),lines=me.canvas.group().appendTo(me.groups.grid),row_width=me.opts.label_width+me.dates.length*me.opts.column_width,row_height=me.opts.bar.height+me.opts.padding,row_y=me.opts.header_height+me.opts.padding/2;this.tasks.forEach(function(task,i){me.canvas.rect(0,row_y,row_width,row_height).addClass("grid-row").appendTo(rows);me.canvas.line(0,row_y+row_height,row_width,row_y+row_height).addClass('row-line').appendTo(lines);row_y+=me.opts.bar.height+me.opts.padding;});},make_grid_ticks:function(){var me=this;var tick_x=me.opts.label_width;var tick_y=me.opts.header_height+me.opts.padding/2;var tick_height=(me.opts.bar.height+me.opts.padding)*me.tasks.length;this.dates.forEach(function(date){var tick_class='tick';if(me.view_mode==='Day'&&date.day()===1){tick_class+=' thick';}
if(me.view_mode==='Week'&&date.date()>=1&&date.date()<8){tick_class+=' thick';}
if(me.view_mode==='Month'&&date.month()%3===0){tick_class+=' thick';}
me.canvas.path(Snap.format("M {x} {y} v {height}",{x:tick_x,y:tick_y,height:tick_height})).addClass(tick_class).appendTo(me.groups.grid);if(me.view_mode==='Month'){tick_x+=date.daysInMonth()*me.opts.column_width/30;}else{tick_x+=me.opts.column_width;}});},make_grid_highlights:function(){var me=this;if(me.view_mode==='Day'){var x=me.opts.label_width+
moment().startOf('day').diff(me.start,'hours')/me.opts.step*me.opts.column_width,y=0,width=me.opts.column_width,height=(me.opts.bar.height+me.opts.padding)*me.tasks.length+
me.opts.header_height+me.opts.padding/2;me.canvas.rect(x,y,width,height).addClass('today-highlight').appendTo(me.groups.grid);}},make_dates:function(){var me=this;this.dates.forEach(function(date,i){var primary_text='';var secondary_text='';if(i===0){primary_text=me.get_date_text(date,"primary");secondary_text=me.get_date_text(date);}else{if(me.view_mode==='Day'){primary_text=date.date()!==me.dates[i-1].date()?me.get_date_text(date,"primary"):"";secondary_text=date.month()!==me.dates[i-1].month()?me.get_date_text(date):"";}
else if(me.view_mode==='Quarter Day'){primary_text=me.get_date_text(date,"primary");secondary_text=date.date()!==me.dates[i-1].date()?me.get_date_text(date):"";}
else if(me.view_mode==='Half Day'){primary_text=me.get_date_text(date,"primary");secondary_text=date.date()!==me.dates[i-1].date()?me.get_date_text(date):"";}
else if(me.view_mode==='Week'){primary_text=me.get_date_text(date,"primary");secondary_text=date.month()!==me.dates[i-1].month()?me.get_date_text(date):"";}
else if(me.view_mode==='Month'){primary_text=me.get_date_text(date,"primary");secondary_text=date.year()!==me.dates[i-1].year()?me.get_date_text(date):"";}}
var primary_text_x=me.opts.label_width+(i*me.opts.column_width),primary_text_y=me.opts.header_height,secondary_text_x=me.opts.label_width+(i*me.opts.column_width),secondary_text_y=me.opts.header_height-25;if(me.view_mode==='Month'){primary_text_x+=(date.daysInMonth()*me.opts.column_width/30)/2;secondary_text_x+=(me.opts.column_width*12)/2;}
if(me.view_mode==='Week'){primary_text_x+=me.opts.column_width/2;secondary_text_x+=(me.opts.column_width*4)/2;}
if(me.view_mode==='Day'){primary_text_x+=me.opts.column_width/2;secondary_text_x+=(me.opts.column_width*30)/2;}
if(me.view_mode==='Quarter Day'){secondary_text_x+=(me.opts.column_width*4)/2;}
if(me.view_mode==='Half Day'){secondary_text_x+=(me.opts.column_width*2)/2;}
me.canvas.text(primary_text_x,primary_text_y,primary_text).addClass('primary-text').appendTo(me.groups.date);if(secondary_text){var $secondary_text=me.canvas.text(secondary_text_x,secondary_text_y,secondary_text).addClass('secondary-text').appendTo(me.groups.date);if($secondary_text.getBBox().x2>me.groups.grid.getBBox().width){$secondary_text.remove();}}});},get_date_text:function(date,primary){var scale=this.view_mode;var text="";if(scale==='Day'){text=(primary)?date.format('D'):date.format('MMMM');}
else if(scale==='Quarter Day'||scale==='Half Day'){text=(primary)?date.format('HH'):date.format('D MMM');}
else if(scale==='Week'){text=(primary)?"Week "+date.format('W'):date.format('MMMM');}
else if(scale==='Month'){text=(primary)?date.format('MMMM'):date.format('YYYY');}
return text;},make_arrows:function(){var me=this;this.tasks.forEach(function(task){if(task.dependent){var dependents=task.dependent.split(',');dependents.forEach(function(task_dependent){var dependent=me.get_task(task_dependent.trim());if(!dependent)return;var arrow=new Arrow({gantt:me,from_task:me._bars[dependent._index],to_task:me._bars[task._index]});me.groups.arrow.add(arrow.element);me._arrows.push(arrow);});}});},make_label:function(){var me=this;var label_x=me.opts.label_width-me.opts.padding,label_y=me.opts.header_height+me.opts.bar.height/2+me.opts.padding;this.tasks.forEach(function(task){me.canvas.text(label_x,label_y,task.name).appendTo(me.groups.label);label_y+=me.opts.bar.height+me.opts.padding;});me.groups.label.attr({"text-anchor":"end","dominant-baseline":"central"});},make_bars:function(){var me=this;this.tasks.forEach(function(task,i){var bar=new Bar({canvas:me.canvas,task:task,gantt:{offset:me.opts.label_width,unit_width:me.opts.column_width,step:me.opts.step,start:me.start,header_height:me.opts.header_height,padding:me.opts.padding,view_mode:me.view_mode},popover_group:me.groups.details});me._bars.push(bar);me.groups.bar.add(bar.group);});},set_arrows_on_bars:function(){var me=this;this._bars.forEach(function(bar){bar.arrows=me._arrows.filter(function(arrow){if(arrow.from_task.task.id===bar.task.id||arrow.to_task.task.id===bar.task.id)
return arrow;});});},setup_events:function(){var me=this;this._bars.forEach(function(bar){bar.events.on_date_change=me.events.bar_on_date_change;bar.events.on_progress_change=me.events.bar_on_progress_change;bar.click(me.events.bar_on_click);});},bind_grid_click:function(){var me=this;this.groups.grid.click(function(){me.canvas.selectAll('.bar-wrapper').forEach(function(el){el.removeClass('active');});});},view_is:function(modes){var me=this;if(typeof modes==='string'){return me.view_mode===modes;}else{modes.reduce(function(acc,curr){return(me.view_mode===curr)||acc},false);}},get_task:function(id){var result=null;this.tasks.forEach(function(task){if(task.id===id){result=task;}});return result;}});var Bar=Class.extend({init:function(opts){for(var key in opts){if(opts.hasOwnProperty(key))
this[key]=opts[key];}
this.set_defaults();this.prepare();this.draw();this.bind();this.action_completed=false;},set_defaults:function(){var defaults={height:20,corner_radius:3,events:{}};for(var key in defaults){if(defaults.hasOwnProperty(key))
if(!this[key])this[key]=defaults[key];}},prepare:function(){this.prepare_values();this.prepare_plugins();},prepare_values:function(){if(!this.task.start||!this.task.end){this.invalid=true;}
this.x=this.compute_x();this.y=this.compute_y();this.duration=(this.task._end.diff(this.task._start,'hours')+24)/this.gantt.step;this.width=this.gantt.unit_width*this.duration;this.progress_width=this.gantt.unit_width*this.duration*(this.task.progress/100)||0;this.group=this.canvas.group().addClass('bar-wrapper');this.bar_group=this.canvas.group().addClass('bar-group').appendTo(this.group);this.handle_group=this.canvas.group().addClass('handle-group').appendTo(this.group);},prepare_plugins:function(){this.filters={};Snap.plugin(function(Snap,Element,Paper,global,Fragment){Element.prototype.get=function(attr){return+this.attr(attr);};Element.prototype.getX=function(){return this.get("x");};Element.prototype.getEndX=function(){return this.getX()+this.getWidth();};Element.prototype.getY=function(){return this.get("y");};Element.prototype.getWidth=function(){return this.get("width");};});},draw:function(){this.draw_bar();this.draw_progress_bar();this.draw_label();this.draw_resize_handles();},draw_bar:function(){this.$bar=this.canvas.rect(this.x,this.y,this.width,this.height,this.corner_radius,this.corner_radius).addClass("bar").appendTo(this.bar_group);if(this.invalid){this.$bar.addClass('bar-invalid');}},draw_progress_bar:function(){if(this.invalid)return;this.$bar_progress=this.canvas.rect(this.x,this.y,this.progress_width,this.height,this.corner_radius,this.corner_radius).addClass("bar-progress").appendTo(this.bar_group);},draw_label:function(){this.canvas.text(this.x+this.width/2,this.y+this.height/2,this.task.name).addClass("bar-label").appendTo(this.bar_group);this.update_label_position();},draw_resize_handles:function(){if(this.invalid)return;var bar=this.$bar,bar_progress=this.$bar_progress;this.canvas.rect(bar.getX()+bar.getWidth()-9,bar.getY()+1,8,this.height-2,this.corner_radius,this.corner_radius).addClass('handle right').appendTo(this.handle_group);this.canvas.rect(bar.getX()+1,bar.getY()+1,8,this.height-2,this.corner_radius,this.corner_radius).addClass('handle left').appendTo(this.handle_group);if(this.task.progress&&this.task.progress<100){this.canvas.polygon(bar_progress.getEndX()-5,bar_progress.getY()+bar_progress.get("height"),bar_progress.getEndX()+5,bar_progress.getY()+bar_progress.get("height"),bar_progress.getEndX(),bar_progress.getY()+bar_progress.get("height")-8.66).addClass('handle progress').appendTo(this.handle_group)}},draw_invalid_bar:function(){var x=this.gantt.offset+
(moment().startOf('day').diff(this.gantt.start,'hours')/this.gantt.step*this.gantt.unit_width);this.canvas.rect(x,this.y,this.gantt.unit_width*2,this.height,this.corner_radius,this.corner_radius).addClass("bar-invalid").appendTo(this.bar_group);this.canvas.text(x+this.gantt.unit_width,this.y+this.height/2,'Dates not set').addClass("bar-label big").appendTo(this.bar_group);},bind:function(){if(this.invalid)return;this.show_details();this.bind_resize();this.bind_drag();this.bind_resize_progress();},show_details:function(){var me=this;var details_box=me.popover_group.select('.details-wrapper');if(!details_box){details_box=me.canvas.group().addClass('details-wrapper');details_box.appendTo(me.popover_group);me.canvas.rect(0,0,0,110,2,2).addClass('details-container').appendTo(details_box);me.canvas.text(0,0,"").attr({dx:10,dy:30}).addClass('details-heading').appendTo(details_box);me.canvas.text(0,0,"").attr({dx:10,dy:65}).addClass('details-body').appendTo(details_box);me.canvas.text(0,0,"").attr({dx:10,dy:90}).addClass('details-body').appendTo(details_box);}
this.group.mouseover(function(e,x,y){me.popover_group.removeClass('hide');var pos=me.get_details_position();details_box.transform("t"+pos.x+","+pos.y);var heading=me.task.name+": "+
me.task._start.format("MMM D")+" - "+
me.task._end.format("MMM D");var $heading=me.popover_group.select('.details-heading');$heading.attr('text',heading);var bbox=$heading.getBBox();details_box.select('.details-container').attr({width:bbox.width+20});var body1="Duration: "+
me.task._end.diff(me.task._start,'days')+" days";var body2=me.task.progress?"Progress: "+me.task.progress+"%":"";var $body=me.popover_group.selectAll('.details-body');$body[0].attr('text',body1);$body[1].attr('text',body2);});this.group.mouseout(function(){setTimeout(function(){me.popover_group.addClass('hide');},500);});},get_details_position:function(){return{x:this.$bar.getEndX()+2,y:this.$bar.getY()-10};},bind_resize:function(){var me=this;var bar=this.$bar;var handle=me.get_handles();handle.right.drag(onmove_right,onstart,onstop_right);handle.left.drag(onmove_left,onstart,onstop_left);function onstart(){bar.ox=bar.getX();bar.oy=bar.getY();bar.owidth=bar.getWidth();this.ox=this.getX();this.oy=this.getY();bar.finaldx=0;}
function onmove_right(dx,dy){bar.finaldx=me.get_snap_position(dx);me.update_bar_position(null,bar.owidth+bar.finaldx);}
function onstop_right(){if(bar.finaldx)me.date_changed();me.set_action_completed();}
function onmove_left(dx,dy){bar.finaldx=me.get_snap_position(dx);me.update_bar_position(bar.ox+bar.finaldx,bar.owidth-bar.finaldx);}
function onstop_left(){if(bar.finaldx)me.date_changed();me.set_action_completed();}},get_handles:function(){var me=this;return{left:me.handle_group.select('.handle.left'),right:me.handle_group.select('.handle.right')};},bind_drag:function(){var me=this;var bar=this.$bar;this.bar_group.drag(onmove,onstart,onstop);function onmove(dx,dy){bar.finaldx=me.get_snap_position(dx);me.update_bar_position(bar.ox+bar.finaldx);}
function onstop(){if(!bar.finaldx)return;me.date_changed();me.set_action_completed();}
function onstart(){bar.ox=bar.getX();bar.finaldx=0;}},bind_resize_progress:function(){var me=this;var bar=this.$bar;var bar_progress=this.$bar_progress;var handle=me.group.select('.handle.progress');handle&&handle.drag(onmove,onstart,onstop);function onmove(dx,dy){if(dx>bar_progress.max_dx){dx=bar_progress.max_dx;}
if(dx<bar_progress.min_dx){dx=bar_progress.min_dx;}
bar_progress.attr("width",bar_progress.owidth+dx);handle.transform("t"+dx+",0");bar_progress.finaldx=dx;}
function onstop(){if(!bar_progress.finaldx)return;me.progress_changed();me.set_action_completed();}
function onstart(){bar_progress.finaldx=0;bar_progress.owidth=bar_progress.getWidth();bar_progress.min_dx=-bar_progress.getWidth();bar_progress.max_dx=bar.getWidth()-bar_progress.getWidth();}},view_is:function(modes){var me=this;if(typeof modes==='string'){return me.gantt.view_mode===modes;}else{for(var i=0;i<modes.length;i++){if(me.gantt.view_mode===modes[i])return true;}
return false;}},update_bar_position:function(x,width){var bar=this.$bar;if(x)this.update_attr(bar,"x",x);if(width)this.update_attr(bar,"width",width);this.update_label_position();this.update_handle_position();this.update_progressbar_position();this.update_arrow_position();this.update_details_position();},click:function(callback){var me=this;this.group.click(function(){if(me.action_completed){return;}
if(me.group.hasClass('active')){callback(me.task);}
me.unselect_all();me.group.toggleClass('active');});},date_changed:function(){this.events.on_date_change&&this.events.on_date_change(this.task,this.compute_start_date(),this.compute_end_date());},progress_changed:function(){this.events.on_progress_change&&this.events.on_progress_change(this.task,this.compute_progress());},set_action_completed:function(){var me=this;this.action_completed=true;setTimeout(function(){me.action_completed=false;},2000);},compute_date:function(x){var shift=(x-this.compute_x())/this.gantt.unit_width;var date=this.task._start.clone().add(this.gantt.step*shift,'hours');return date;},compute_start_date:function(){var bar=this.$bar,shift=(bar.getX()-this.compute_x())/this.gantt.unit_width,new_start_date=this.task._start.clone().add(this.gantt.step*shift,'hours');return new_start_date;},compute_end_date:function(){var bar=this.$bar,og_x=this.compute_x()+this.duration*this.gantt.unit_width,final_x=bar.getEndX(),shift=(final_x-og_x)/this.gantt.unit_width,new_end_date=this.task._end.clone().add(this.gantt.step*shift,'hours');return new_end_date;},compute_progress:function(){return this.$bar_progress.getWidth()/this.$bar.getWidth()*100;},compute_x:function(){var x=this.gantt.offset+
(this.task._start.diff(this.gantt.start,'hours')/this.gantt.step*this.gantt.unit_width);if(this.view_is('Month')){x=this.gantt.offset+
this.task._start.diff(this.gantt.start,'days')*this.gantt.unit_width/30;}
return x;},compute_y:function(){return this.gantt.header_height+this.gantt.padding+
this.task._index*(this.height+this.gantt.padding);},get_snap_position:function(dx){var me=this;var odx=dx,rem,position;if(me.view_is('Week')){rem=dx%(me.gantt.unit_width/7);position=odx-rem+
((rem<me.gantt.unit_width/14)?0:me.gantt.unit_width/7);}else if(me.view_is('Month')){rem=dx%(me.gantt.unit_width/30);position=odx-rem+
((rem<me.gantt.unit_width/60)?0:me.gantt.unit_width/30);}else{rem=dx%me.gantt.unit_width;position=odx-rem+
((rem<me.gantt.unit_width/2)?0:me.gantt.unit_width);}
return position;},update_attr:function(element,attr,value){value=+value;if(!isNaN(value)){element.attr(attr,value);}
return element;},update_progressbar_position:function(){this.$bar_progress.attr('x',this.$bar.getX());this.$bar_progress.attr('width',this.$bar.getWidth()*(this.task.progress/100));},update_label_position:function(){var bar=this.$bar,label=this.group.select('.bar-label');if(label.getBBox().width>bar.getWidth()){label.addClass('big').attr('x',bar.getX()+bar.getWidth()+5);}else{label.removeClass('big').attr('x',bar.getX()+bar.getWidth()/2);}},update_handle_position:function(){var bar=this.$bar;this.handle_group.select(".handle.left").attr({"x":bar.getX()+1,});this.handle_group.select(".handle.right").attr({"x":bar.getX()+bar.getWidth()-9,});},update_arrow_position:function(){this.arrows.forEach(function(arrow){arrow.update();});},update_details_position:function(){var details_box=this.popover_group.select('.details-wrapper');var pos=this.get_details_position();details_box&&details_box.transform("t"+pos.x+","+pos.y);},unselect_all:function(){this.canvas.selectAll('.bar-wrapper').forEach(function(el){el.removeClass('active');});}});var Arrow=Class.extend({init:function(opts){for(var key in opts){if(opts.hasOwnProperty(key))
this[key]=opts[key];}
this.prepare();this.draw();},prepare:function(){var gantt=this.gantt,from_task=this.from_task,to_task=this.to_task;this.start_x=from_task.$bar.getX()+from_task.$bar.getWidth()/2;while(to_task.$bar.getX()<this.start_x+gantt.opts.padding&&this.start_x>from_task.$bar.getX()+gantt.opts.padding)
{this.start_x-=10;}
this.start_y=gantt.opts.header_height+gantt.opts.bar.height+
(gantt.opts.padding+gantt.opts.bar.height)*from_task.task._index+
gantt.opts.padding;this.end_x=to_task.$bar.getX()-gantt.opts.padding/2;this.end_y=gantt.opts.header_height+gantt.opts.bar.height/2+
(gantt.opts.padding+gantt.opts.bar.height)*to_task.task._index+
gantt.opts.padding;var from_is_below_to=(from_task.task._index>to_task.task._index);this.curve=gantt.opts.arrow.curve;this.clockwise=from_is_below_to?1:0;this.curve_y=from_is_below_to?-this.curve:this.curve;this.offset=from_is_below_to?this.end_y+gantt.opts.arrow.curve:this.end_y-gantt.opts.arrow.curve;this.path=Snap.format("M {start_x} {start_y} V {offset} "+"a {curve} {curve} 0 0 {clockwise} {curve} {curve_y} "+"L {end_x} {end_y} m -5 -5 l 5 5 l -5 5",{start_x:this.start_x,start_y:this.start_y,end_x:this.end_x,end_y:this.end_y,offset:this.offset,curve:this.curve,clockwise:this.clockwise,curve_y:this.curve_y});if(to_task.$bar.getX()<from_task.$bar.getX()+gantt.opts.padding){this.path=Snap.format("M {start_x} {start_y} v {down_1} "+"a {curve} {curve} 0 0 1 -{curve} {curve} H {left} "+"a {curve} {curve} 0 0 {clockwise} -{curve} {curve_y} V {down_2} "+"a {curve} {curve} 0 0 {clockwise} {curve} {curve_y} "+"L {end_x} {end_y} m -5 -5 l 5 5 l -5 5",{start_x:this.start_x,start_y:this.start_y,end_x:this.end_x,end_y:this.end_y,down_1:this.gantt.opts.padding/2-this.curve,down_2:to_task.$bar.getY()+to_task.$bar.get('height')/2-this.curve_y,left:to_task.$bar.getX()-gantt.opts.padding,offset:this.offset,curve:this.curve,clockwise:this.clockwise,curve_y:this.curve_y});}},draw:function(){this.element=this.gantt.canvas.path(this.path).attr("data-from",this.from_task.task.id).attr("data-to",this.to_task.task.id);},update:function(){this.prepare();this.element.attr('d',this.path);}});;